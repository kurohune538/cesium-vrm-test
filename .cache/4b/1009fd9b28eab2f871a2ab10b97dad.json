{"id":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"// These octree flags must be in sync with GpuOctreeFlag in VoxelTraversal.js\\n\\\n#define OCTREE_FLAG_INTERNAL 0\\n\\\n#define OCTREE_FLAG_LEAF 1\\n\\\n#define OCTREE_FLAG_PACKED_LEAF_FROM_PARENT 2\\n\\\n\\n\\\n#define OCTREE_MAX_LEVELS 32 // Harcoded value because GLSL doesn't like variable length loops\\n\\\n\\n\\\nuniform sampler2D u_octreeInternalNodeTexture;\\n\\\nuniform vec2 u_octreeInternalNodeTexelSizeUv;\\n\\\nuniform int u_octreeInternalNodeTilesPerRow;\\n\\\n#if (SAMPLE_COUNT > 1)\\n\\\nuniform sampler2D u_octreeLeafNodeTexture;\\n\\\nuniform vec2 u_octreeLeafNodeTexelSizeUv;\\n\\\nuniform int u_octreeLeafNodeTilesPerRow;\\n\\\n#endif\\n\\\n\\n\\\nstruct OctreeNodeData {\\n\\\n    int data;\\n\\\n    int flag;\\n\\\n};\\n\\\n\\n\\\nstruct TraversalData {\\n\\\n    ivec4 octreeCoords;\\n\\\n    int parentOctreeIndex;\\n\\\n};\\n\\\n\\n\\\nstruct SampleData {\\n\\\n    int megatextureIndex;\\n\\\n    ivec4 tileCoords;\\n\\\n    vec3 tileUv;\\n\\\n    #if (SAMPLE_COUNT > 1)\\n\\\n        float weight;\\n\\\n    #endif\\n\\\n};\\n\\\n\\n\\\n// Integer mod: For WebGL1 only\\n\\\nint intMod(in int a, in int b) {\\n\\\n    return a - (b * (a / b));\\n\\\n}\\n\\\nint normU8_toInt(in float value) {\\n\\\n    return int(value * 255.0);\\n\\\n}\\n\\\nint normU8x2_toInt(in vec2 value) {\\n\\\n    return int(value.x * 255.0) + 256 * int(value.y * 255.0);\\n\\\n}\\n\\\nfloat normU8x2_toFloat(in vec2 value) {\\n\\\n    return float(normU8x2_toInt(value)) / 65535.0;\\n\\\n}\\n\\\n\\n\\\nOctreeNodeData getOctreeNodeData(in vec2 octreeUv) {\\n\\\n    vec4 texData = texture(u_octreeInternalNodeTexture, octreeUv);\\n\\\n\\n\\\n    OctreeNodeData data;\\n\\\n    data.data = normU8x2_toInt(texData.xy);\\n\\\n    data.flag = normU8x2_toInt(texData.zw);\\n\\\n    return data;\\n\\\n}\\n\\\n\\n\\\nOctreeNodeData getOctreeChildData(in int parentOctreeIndex, in ivec3 childCoord) {\\n\\\n    int childIndex = childCoord.z * 4 + childCoord.y * 2 + childCoord.x;\\n\\\n    int octreeCoordX = intMod(parentOctreeIndex, u_octreeInternalNodeTilesPerRow) * 9 + 1 + childIndex;\\n\\\n    int octreeCoordY = parentOctreeIndex / u_octreeInternalNodeTilesPerRow;\\n\\\n    vec2 octreeUv = u_octreeInternalNodeTexelSizeUv * vec2(float(octreeCoordX) + 0.5, float(octreeCoordY) + 0.5);\\n\\\n    return getOctreeNodeData(octreeUv);\\n\\\n}\\n\\\n\\n\\\nint getOctreeParentIndex(in int octreeIndex) {\\n\\\n    int octreeCoordX = intMod(octreeIndex, u_octreeInternalNodeTilesPerRow) * 9;\\n\\\n    int octreeCoordY = octreeIndex / u_octreeInternalNodeTilesPerRow;\\n\\\n    vec2 octreeUv = u_octreeInternalNodeTexelSizeUv * vec2(float(octreeCoordX) + 0.5, float(octreeCoordY) + 0.5);\\n\\\n    vec4 parentData = texture(u_octreeInternalNodeTexture, octreeUv);\\n\\\n    int parentOctreeIndex = normU8x2_toInt(parentData.xy);\\n\\\n    return parentOctreeIndex;\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n* Convert a position in the uv-space of the tileset bounding shape\\n\\\n* into the uv-space of a tile within the tileset\\n\\\n*/\\n\\\nvec3 getTileUv(in vec3 shapePosition, in ivec4 octreeCoords) {\\n\\\n\t// PERFORMANCE_IDEA: use bit-shifting (only in WebGL2)\\n\\\n    float dimAtLevel = pow(2.0, float(octreeCoords.w));\\n\\\n    return shapePosition * dimAtLevel - vec3(octreeCoords.xyz);\\n\\\n}\\n\\\n\\n\\\nvoid getOctreeLeafSampleData(in OctreeNodeData data, in ivec4 octreeCoords, out SampleData sampleData) {\\n\\\n    sampleData.megatextureIndex = data.data;\\n\\\n    sampleData.tileCoords = (data.flag == OCTREE_FLAG_PACKED_LEAF_FROM_PARENT)\\n\\\n        ? ivec4(octreeCoords.xyz / 2, octreeCoords.w - 1)\\n\\\n        : octreeCoords;\\n\\\n}\\n\\\n\\n\\\n#if (SAMPLE_COUNT > 1)\\n\\\nvoid getOctreeLeafSampleDatas(in OctreeNodeData data, in ivec4 octreeCoords, out SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    int leafIndex = data.data;\\n\\\n    int leafNodeTexelCount = 2;\\n\\\n    // Adding 0.5 moves to the center of the texel\\n\\\n    float leafCoordXStart = float(intMod(leafIndex, u_octreeLeafNodeTilesPerRow) * leafNodeTexelCount) + 0.5;\\n\\\n    float leafCoordY = float(leafIndex / u_octreeLeafNodeTilesPerRow) + 0.5;\\n\\\n\\n\\\n    // Get an interpolation weight and a flag to determine whether to read the parent texture\\n\\\n    vec2 leafUv0 = u_octreeLeafNodeTexelSizeUv * vec2(leafCoordXStart + 0.0, leafCoordY);\\n\\\n    vec4 leafData0 = texture(u_octreeLeafNodeTexture, leafUv0);\\n\\\n    float lerp = normU8x2_toFloat(leafData0.xy);\\n\\\n    sampleDatas[0].weight = 1.0 - lerp;\\n\\\n    sampleDatas[1].weight = lerp;\\n\\\n    // TODO: this looks wrong? Should be comparing to OCTREE_FLAG_PACKED_LEAF_FROM_PARENT\\n\\\n    sampleDatas[0].tileCoords = (normU8_toInt(leafData0.z) == 1)\\n\\\n        ? ivec4(octreeCoords.xyz / 2, octreeCoords.w - 1)\\n\\\n        : octreeCoords;\\n\\\n    sampleDatas[1].tileCoords = (normU8_toInt(leafData0.w) == 1)\\n\\\n        ? ivec4(octreeCoords.xyz / 2, octreeCoords.w - 1)\\n\\\n        : octreeCoords;\\n\\\n\\n\\\n    // Get megatexture indices for both samples\\n\\\n    vec2 leafUv1 = u_octreeLeafNodeTexelSizeUv * vec2(leafCoordXStart + 1.0, leafCoordY);\\n\\\n    vec4 leafData1 = texture(u_octreeLeafNodeTexture, leafUv1);\\n\\\n    sampleDatas[0].megatextureIndex = normU8x2_toInt(leafData1.xy);\\n\\\n    sampleDatas[1].megatextureIndex = normU8x2_toInt(leafData1.zw);\\n\\\n}\\n\\\n#endif\\n\\\n\\n\\\nOctreeNodeData traverseOctreeDownwards(in vec3 shapePosition, inout TraversalData traversalData) {\\n\\\n    float sizeAtLevel = 1.0 / pow(2.0, float(traversalData.octreeCoords.w));\\n\\\n    vec3 start = vec3(traversalData.octreeCoords.xyz) * sizeAtLevel;\\n\\\n    vec3 end = start + vec3(sizeAtLevel);\\n\\\n    OctreeNodeData childData;\\n\\\n\\n\\\n    for (int i = 0; i < OCTREE_MAX_LEVELS; ++i) {\\n\\\n        // Find out which octree child contains the position\\n\\\n        // 0 if before center, 1 if after\\n\\\n        vec3 center = 0.5 * (start + end);\\n\\\n        vec3 childCoord = step(center, shapePosition);\\n\\\n\\n\\\n        // Get octree coords for the next level down\\n\\\n        ivec4 octreeCoords = traversalData.octreeCoords;\\n\\\n        traversalData.octreeCoords = ivec4(octreeCoords.xyz * 2 + ivec3(childCoord), octreeCoords.w + 1);\\n\\\n\\n\\\n        childData = getOctreeChildData(traversalData.parentOctreeIndex, ivec3(childCoord));\\n\\\n\\n\\\n        if (childData.flag != OCTREE_FLAG_INTERNAL) {\\n\\\n            // leaf tile - stop traversing\\n\\\n            break;\\n\\\n        }\\n\\\n\\n\\\n        // interior tile - keep going deeper\\n\\\n        start = mix(start, center, childCoord);\\n\\\n        end = mix(center, end, childCoord);\\n\\\n        traversalData.parentOctreeIndex = childData.data;\\n\\\n    }\\n\\\n\\n\\\n    return childData;\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n* Transform a given position to an octree tile coordinate and a position within that tile,\\n\\\n* and find the corresponding megatexture index and texture coordinates\\n\\\n*/\\n\\\nvoid traverseOctreeFromBeginning(in vec3 shapePosition, out TraversalData traversalData, out SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    traversalData.octreeCoords = ivec4(0);\\n\\\n    traversalData.parentOctreeIndex = 0;\\n\\\n\\n\\\n    OctreeNodeData nodeData = getOctreeNodeData(vec2(0.0));\\n\\\n    if (nodeData.flag != OCTREE_FLAG_LEAF) {\\n\\\n        nodeData = traverseOctreeDownwards(shapePosition, traversalData);\\n\\\n    }\\n\\\n\\n\\\n    #if (SAMPLE_COUNT == 1)\\n\\\n        getOctreeLeafSampleData(nodeData, traversalData.octreeCoords, sampleDatas[0]);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n    #else\\n\\\n        getOctreeLeafSampleDatas(nodeData, traversalData.octreeCoords, sampleDatas);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n        sampleDatas[1].tileUv = getTileUv(shapePosition, sampleDatas[1].tileCoords);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\nbool inRange(in vec3 v, in vec3 minVal, in vec3 maxVal) {\\n\\\n    return clamp(v, minVal, maxVal) == v;\\n\\\n}\\n\\\n\\n\\\nbool insideTile(in vec3 shapePosition, in ivec4 octreeCoords) {\\n\\\n    vec3 tileUv = getTileUv(shapePosition, octreeCoords);\\n\\\n\tbool inside = inRange(tileUv, vec3(0.0), vec3(1.0));\\n\\\n\t// Assume (!) the position is always inside the root tile.\\n\\\n\treturn inside || octreeCoords.w == 0;\\n\\\n}\\n\\\n\\n\\\nvoid traverseOctreeFromExisting(in vec3 shapePosition, inout TraversalData traversalData, inout SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    if (insideTile(shapePosition, traversalData.octreeCoords)) {\\n\\\n        for (int i = 0; i < SAMPLE_COUNT; i++) {\\n\\\n            sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n        }\\n\\\n        return;\\n\\\n    }\\n\\\n\\n\\\n    // Go up tree until we find a parent tile containing shapePosition\\n\\\n    for (int i = 0; i < OCTREE_MAX_LEVELS; ++i) {\\n\\\n        traversalData.octreeCoords.xyz /= 2;\\n\\\n        traversalData.octreeCoords.w -= 1;\\n\\\n\\n\\\n        if (insideTile(shapePosition, traversalData.octreeCoords)) {\\n\\\n            break;\\n\\\n        }\\n\\\n\\n\\\n        traversalData.parentOctreeIndex = getOctreeParentIndex(traversalData.parentOctreeIndex);\\n\\\n    }\\n\\\n\\n\\\n    // Go down tree\\n\\\n    OctreeNodeData nodeData = traverseOctreeDownwards(shapePosition, traversalData);\\n\\\n\\n\\\n    #if (SAMPLE_COUNT == 1)\\n\\\n        getOctreeLeafSampleData(nodeData, traversalData.octreeCoords, sampleDatas[0]);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n    #else\\n\\\n        getOctreeLeafSampleDatas(nodeData, traversalData.octreeCoords, sampleDatas);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n        sampleDatas[1].tileUv = getTileUv(shapePosition, sampleDatas[1].tileCoords);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":166,"column":0}},{"generated":{"line":173,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":167,"column":0}},{"generated":{"line":174,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":168,"column":0}},{"generated":{"line":175,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":169,"column":0}},{"generated":{"line":176,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":170,"column":0}},{"generated":{"line":177,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":171,"column":0}},{"generated":{"line":178,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":172,"column":0}},{"generated":{"line":179,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":173,"column":0}},{"generated":{"line":180,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":174,"column":0}},{"generated":{"line":181,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":175,"column":0}},{"generated":{"line":182,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":176,"column":0}},{"generated":{"line":183,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":177,"column":0}},{"generated":{"line":184,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":178,"column":0}},{"generated":{"line":185,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":179,"column":0}},{"generated":{"line":186,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":180,"column":0}},{"generated":{"line":187,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":181,"column":0}},{"generated":{"line":188,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":182,"column":0}},{"generated":{"line":189,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":183,"column":0}},{"generated":{"line":190,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":184,"column":0}},{"generated":{"line":191,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":185,"column":0}},{"generated":{"line":192,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":186,"column":0}},{"generated":{"line":193,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":187,"column":0}},{"generated":{"line":194,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":188,"column":0}},{"generated":{"line":195,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":189,"column":0}},{"generated":{"line":196,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":190,"column":0}},{"generated":{"line":197,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":191,"column":0}},{"generated":{"line":198,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":192,"column":0}},{"generated":{"line":199,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":193,"column":0}},{"generated":{"line":200,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":194,"column":0}},{"generated":{"line":201,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":195,"column":0}},{"generated":{"line":202,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":196,"column":0}},{"generated":{"line":203,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":197,"column":0}},{"generated":{"line":204,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":198,"column":0}},{"generated":{"line":205,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":199,"column":0}},{"generated":{"line":206,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":200,"column":0}},{"generated":{"line":207,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":201,"column":0}},{"generated":{"line":208,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":202,"column":0}},{"generated":{"line":209,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":203,"column":0}},{"generated":{"line":210,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":204,"column":0}},{"generated":{"line":211,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":205,"column":0}},{"generated":{"line":212,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":206,"column":0}},{"generated":{"line":213,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":207,"column":0}},{"generated":{"line":214,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":208,"column":0}},{"generated":{"line":215,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":209,"column":0}},{"generated":{"line":216,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":210,"column":0}},{"generated":{"line":217,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":211,"column":0}},{"generated":{"line":218,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":212,"column":0}},{"generated":{"line":219,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":213,"column":0}},{"generated":{"line":220,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":214,"column":0}},{"generated":{"line":221,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":215,"column":0}},{"generated":{"line":222,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":216,"column":0}},{"generated":{"line":223,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":217,"column":0}},{"generated":{"line":224,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":218,"column":0}},{"generated":{"line":225,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":219,"column":0}},{"generated":{"line":226,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":220,"column":0}},{"generated":{"line":227,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":221,"column":0}},{"generated":{"line":228,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":0}},{"generated":{"line":228,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1}},{"generated":{"line":229,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1},"name":"exports"},{"generated":{"line":229,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1}},{"generated":{"line":229,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1},"name":"default"},{"generated":{"line":229,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1}},{"generated":{"line":229,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1},"name":"_default"},{"generated":{"line":229,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js","original":{"line":222,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Voxels/Octree.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"// These octree flags must be in sync with GpuOctreeFlag in VoxelTraversal.js\\n\\\n#define OCTREE_FLAG_INTERNAL 0\\n\\\n#define OCTREE_FLAG_LEAF 1\\n\\\n#define OCTREE_FLAG_PACKED_LEAF_FROM_PARENT 2\\n\\\n\\n\\\n#define OCTREE_MAX_LEVELS 32 // Harcoded value because GLSL doesn't like variable length loops\\n\\\n\\n\\\nuniform sampler2D u_octreeInternalNodeTexture;\\n\\\nuniform vec2 u_octreeInternalNodeTexelSizeUv;\\n\\\nuniform int u_octreeInternalNodeTilesPerRow;\\n\\\n#if (SAMPLE_COUNT > 1)\\n\\\nuniform sampler2D u_octreeLeafNodeTexture;\\n\\\nuniform vec2 u_octreeLeafNodeTexelSizeUv;\\n\\\nuniform int u_octreeLeafNodeTilesPerRow;\\n\\\n#endif\\n\\\n\\n\\\nstruct OctreeNodeData {\\n\\\n    int data;\\n\\\n    int flag;\\n\\\n};\\n\\\n\\n\\\nstruct TraversalData {\\n\\\n    ivec4 octreeCoords;\\n\\\n    int parentOctreeIndex;\\n\\\n};\\n\\\n\\n\\\nstruct SampleData {\\n\\\n    int megatextureIndex;\\n\\\n    ivec4 tileCoords;\\n\\\n    vec3 tileUv;\\n\\\n    #if (SAMPLE_COUNT > 1)\\n\\\n        float weight;\\n\\\n    #endif\\n\\\n};\\n\\\n\\n\\\n// Integer mod: For WebGL1 only\\n\\\nint intMod(in int a, in int b) {\\n\\\n    return a - (b * (a / b));\\n\\\n}\\n\\\nint normU8_toInt(in float value) {\\n\\\n    return int(value * 255.0);\\n\\\n}\\n\\\nint normU8x2_toInt(in vec2 value) {\\n\\\n    return int(value.x * 255.0) + 256 * int(value.y * 255.0);\\n\\\n}\\n\\\nfloat normU8x2_toFloat(in vec2 value) {\\n\\\n    return float(normU8x2_toInt(value)) / 65535.0;\\n\\\n}\\n\\\n\\n\\\nOctreeNodeData getOctreeNodeData(in vec2 octreeUv) {\\n\\\n    vec4 texData = texture(u_octreeInternalNodeTexture, octreeUv);\\n\\\n\\n\\\n    OctreeNodeData data;\\n\\\n    data.data = normU8x2_toInt(texData.xy);\\n\\\n    data.flag = normU8x2_toInt(texData.zw);\\n\\\n    return data;\\n\\\n}\\n\\\n\\n\\\nOctreeNodeData getOctreeChildData(in int parentOctreeIndex, in ivec3 childCoord) {\\n\\\n    int childIndex = childCoord.z * 4 + childCoord.y * 2 + childCoord.x;\\n\\\n    int octreeCoordX = intMod(parentOctreeIndex, u_octreeInternalNodeTilesPerRow) * 9 + 1 + childIndex;\\n\\\n    int octreeCoordY = parentOctreeIndex / u_octreeInternalNodeTilesPerRow;\\n\\\n    vec2 octreeUv = u_octreeInternalNodeTexelSizeUv * vec2(float(octreeCoordX) + 0.5, float(octreeCoordY) + 0.5);\\n\\\n    return getOctreeNodeData(octreeUv);\\n\\\n}\\n\\\n\\n\\\nint getOctreeParentIndex(in int octreeIndex) {\\n\\\n    int octreeCoordX = intMod(octreeIndex, u_octreeInternalNodeTilesPerRow) * 9;\\n\\\n    int octreeCoordY = octreeIndex / u_octreeInternalNodeTilesPerRow;\\n\\\n    vec2 octreeUv = u_octreeInternalNodeTexelSizeUv * vec2(float(octreeCoordX) + 0.5, float(octreeCoordY) + 0.5);\\n\\\n    vec4 parentData = texture(u_octreeInternalNodeTexture, octreeUv);\\n\\\n    int parentOctreeIndex = normU8x2_toInt(parentData.xy);\\n\\\n    return parentOctreeIndex;\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n* Convert a position in the uv-space of the tileset bounding shape\\n\\\n* into the uv-space of a tile within the tileset\\n\\\n*/\\n\\\nvec3 getTileUv(in vec3 shapePosition, in ivec4 octreeCoords) {\\n\\\n\t// PERFORMANCE_IDEA: use bit-shifting (only in WebGL2)\\n\\\n    float dimAtLevel = pow(2.0, float(octreeCoords.w));\\n\\\n    return shapePosition * dimAtLevel - vec3(octreeCoords.xyz);\\n\\\n}\\n\\\n\\n\\\nvoid getOctreeLeafSampleData(in OctreeNodeData data, in ivec4 octreeCoords, out SampleData sampleData) {\\n\\\n    sampleData.megatextureIndex = data.data;\\n\\\n    sampleData.tileCoords = (data.flag == OCTREE_FLAG_PACKED_LEAF_FROM_PARENT)\\n\\\n        ? ivec4(octreeCoords.xyz / 2, octreeCoords.w - 1)\\n\\\n        : octreeCoords;\\n\\\n}\\n\\\n\\n\\\n#if (SAMPLE_COUNT > 1)\\n\\\nvoid getOctreeLeafSampleDatas(in OctreeNodeData data, in ivec4 octreeCoords, out SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    int leafIndex = data.data;\\n\\\n    int leafNodeTexelCount = 2;\\n\\\n    // Adding 0.5 moves to the center of the texel\\n\\\n    float leafCoordXStart = float(intMod(leafIndex, u_octreeLeafNodeTilesPerRow) * leafNodeTexelCount) + 0.5;\\n\\\n    float leafCoordY = float(leafIndex / u_octreeLeafNodeTilesPerRow) + 0.5;\\n\\\n\\n\\\n    // Get an interpolation weight and a flag to determine whether to read the parent texture\\n\\\n    vec2 leafUv0 = u_octreeLeafNodeTexelSizeUv * vec2(leafCoordXStart + 0.0, leafCoordY);\\n\\\n    vec4 leafData0 = texture(u_octreeLeafNodeTexture, leafUv0);\\n\\\n    float lerp = normU8x2_toFloat(leafData0.xy);\\n\\\n    sampleDatas[0].weight = 1.0 - lerp;\\n\\\n    sampleDatas[1].weight = lerp;\\n\\\n    // TODO: this looks wrong? Should be comparing to OCTREE_FLAG_PACKED_LEAF_FROM_PARENT\\n\\\n    sampleDatas[0].tileCoords = (normU8_toInt(leafData0.z) == 1)\\n\\\n        ? ivec4(octreeCoords.xyz / 2, octreeCoords.w - 1)\\n\\\n        : octreeCoords;\\n\\\n    sampleDatas[1].tileCoords = (normU8_toInt(leafData0.w) == 1)\\n\\\n        ? ivec4(octreeCoords.xyz / 2, octreeCoords.w - 1)\\n\\\n        : octreeCoords;\\n\\\n\\n\\\n    // Get megatexture indices for both samples\\n\\\n    vec2 leafUv1 = u_octreeLeafNodeTexelSizeUv * vec2(leafCoordXStart + 1.0, leafCoordY);\\n\\\n    vec4 leafData1 = texture(u_octreeLeafNodeTexture, leafUv1);\\n\\\n    sampleDatas[0].megatextureIndex = normU8x2_toInt(leafData1.xy);\\n\\\n    sampleDatas[1].megatextureIndex = normU8x2_toInt(leafData1.zw);\\n\\\n}\\n\\\n#endif\\n\\\n\\n\\\nOctreeNodeData traverseOctreeDownwards(in vec3 shapePosition, inout TraversalData traversalData) {\\n\\\n    float sizeAtLevel = 1.0 / pow(2.0, float(traversalData.octreeCoords.w));\\n\\\n    vec3 start = vec3(traversalData.octreeCoords.xyz) * sizeAtLevel;\\n\\\n    vec3 end = start + vec3(sizeAtLevel);\\n\\\n    OctreeNodeData childData;\\n\\\n\\n\\\n    for (int i = 0; i < OCTREE_MAX_LEVELS; ++i) {\\n\\\n        // Find out which octree child contains the position\\n\\\n        // 0 if before center, 1 if after\\n\\\n        vec3 center = 0.5 * (start + end);\\n\\\n        vec3 childCoord = step(center, shapePosition);\\n\\\n\\n\\\n        // Get octree coords for the next level down\\n\\\n        ivec4 octreeCoords = traversalData.octreeCoords;\\n\\\n        traversalData.octreeCoords = ivec4(octreeCoords.xyz * 2 + ivec3(childCoord), octreeCoords.w + 1);\\n\\\n\\n\\\n        childData = getOctreeChildData(traversalData.parentOctreeIndex, ivec3(childCoord));\\n\\\n\\n\\\n        if (childData.flag != OCTREE_FLAG_INTERNAL) {\\n\\\n            // leaf tile - stop traversing\\n\\\n            break;\\n\\\n        }\\n\\\n\\n\\\n        // interior tile - keep going deeper\\n\\\n        start = mix(start, center, childCoord);\\n\\\n        end = mix(center, end, childCoord);\\n\\\n        traversalData.parentOctreeIndex = childData.data;\\n\\\n    }\\n\\\n\\n\\\n    return childData;\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n* Transform a given position to an octree tile coordinate and a position within that tile,\\n\\\n* and find the corresponding megatexture index and texture coordinates\\n\\\n*/\\n\\\nvoid traverseOctreeFromBeginning(in vec3 shapePosition, out TraversalData traversalData, out SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    traversalData.octreeCoords = ivec4(0);\\n\\\n    traversalData.parentOctreeIndex = 0;\\n\\\n\\n\\\n    OctreeNodeData nodeData = getOctreeNodeData(vec2(0.0));\\n\\\n    if (nodeData.flag != OCTREE_FLAG_LEAF) {\\n\\\n        nodeData = traverseOctreeDownwards(shapePosition, traversalData);\\n\\\n    }\\n\\\n\\n\\\n    #if (SAMPLE_COUNT == 1)\\n\\\n        getOctreeLeafSampleData(nodeData, traversalData.octreeCoords, sampleDatas[0]);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n    #else\\n\\\n        getOctreeLeafSampleDatas(nodeData, traversalData.octreeCoords, sampleDatas);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n        sampleDatas[1].tileUv = getTileUv(shapePosition, sampleDatas[1].tileCoords);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\nbool inRange(in vec3 v, in vec3 minVal, in vec3 maxVal) {\\n\\\n    return clamp(v, minVal, maxVal) == v;\\n\\\n}\\n\\\n\\n\\\nbool insideTile(in vec3 shapePosition, in ivec4 octreeCoords) {\\n\\\n    vec3 tileUv = getTileUv(shapePosition, octreeCoords);\\n\\\n\tbool inside = inRange(tileUv, vec3(0.0), vec3(1.0));\\n\\\n\t// Assume (!) the position is always inside the root tile.\\n\\\n\treturn inside || octreeCoords.w == 0;\\n\\\n}\\n\\\n\\n\\\nvoid traverseOctreeFromExisting(in vec3 shapePosition, inout TraversalData traversalData, inout SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    if (insideTile(shapePosition, traversalData.octreeCoords)) {\\n\\\n        for (int i = 0; i < SAMPLE_COUNT; i++) {\\n\\\n            sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n        }\\n\\\n        return;\\n\\\n    }\\n\\\n\\n\\\n    // Go up tree until we find a parent tile containing shapePosition\\n\\\n    for (int i = 0; i < OCTREE_MAX_LEVELS; ++i) {\\n\\\n        traversalData.octreeCoords.xyz /= 2;\\n\\\n        traversalData.octreeCoords.w -= 1;\\n\\\n\\n\\\n        if (insideTile(shapePosition, traversalData.octreeCoords)) {\\n\\\n            break;\\n\\\n        }\\n\\\n\\n\\\n        traversalData.parentOctreeIndex = getOctreeParentIndex(traversalData.parentOctreeIndex);\\n\\\n    }\\n\\\n\\n\\\n    // Go down tree\\n\\\n    OctreeNodeData nodeData = traverseOctreeDownwards(shapePosition, traversalData);\\n\\\n\\n\\\n    #if (SAMPLE_COUNT == 1)\\n\\\n        getOctreeLeafSampleData(nodeData, traversalData.octreeCoords, sampleDatas[0]);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n    #else\\n\\\n        getOctreeLeafSampleDatas(nodeData, traversalData.octreeCoords, sampleDatas);\\n\\\n        sampleDatas[0].tileUv = getTileUv(shapePosition, sampleDatas[0].tileCoords);\\n\\\n        sampleDatas[1].tileUv = getTileUv(shapePosition, sampleDatas[1].tileCoords);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"14eb39bb2d51319645bb98fd1dfae086","cacheData":{"env":{}}}