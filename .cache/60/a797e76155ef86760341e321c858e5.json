{"id":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\nin float batchId;\\n\\\n\\n\\\n#ifdef EXTRUDED_GEOMETRY\\n\\\nin vec3 extrudeDirection;\\n\\\n\\n\\\nuniform float u_globeMinimumAltitude;\\n\\\n#endif // EXTRUDED_GEOMETRY\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nout vec4 v_color;\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\nout vec4 v_sphericalExtents;\\n\\\n#else // SPHERICAL\\n\\\nout vec2 v_inversePlaneExtents;\\n\\\nout vec4 v_westPlane;\\n\\\nout vec4 v_southPlane;\\n\\\n#endif // SPHERICAL\\n\\\nout vec3 v_uvMinAndSphericalLongitudeRotation;\\n\\\nout vec3 v_uMaxAndInverseDistance;\\n\\\nout vec3 v_vMaxAndInverseDistance;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec4 position = czm_computePosition();\\n\\\n\\n\\\n#ifdef EXTRUDED_GEOMETRY\\n\\\n    float delta = min(u_globeMinimumAltitude, czm_geometricToleranceOverMeter * length(position.xyz));\\n\\\n    delta *= czm_sceneMode == czm_sceneMode3D ? 1.0 : 0.0;\\n\\\n\\n\\\n    //extrudeDirection is zero for the top layer\\n\\\n    position = position + vec4(extrudeDirection * delta, 0.0);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\n    v_sphericalExtents = czm_batchTable_sphericalExtents(batchId);\\n\\\n    v_uvMinAndSphericalLongitudeRotation.z = czm_batchTable_longitudeRotation(batchId);\\n\\\n#else // SPHERICAL\\n\\\n#ifdef COLUMBUS_VIEW_2D\\n\\\n    vec4 planes2D_high = czm_batchTable_planes2D_HIGH(batchId);\\n\\\n    vec4 planes2D_low = czm_batchTable_planes2D_LOW(batchId);\\n\\\n\\n\\\n    // If the primitive is split across the IDL (planes2D_high.x > planes2D_high.w):\\n\\\n    // - If this vertex is on the east side of the IDL (position3DLow.y > 0.0, comparison with position3DHigh may produce artifacts)\\n\\\n    // - existing \\\"east\\\" is on the wrong side of the world, far away (planes2D_high/low.w)\\n\\\n    // - so set \\\"east\\\" as beyond the eastmost extent of the projection (idlSplitNewPlaneHiLow)\\n\\\n    vec2 idlSplitNewPlaneHiLow = vec2(EAST_MOST_X_HIGH - (WEST_MOST_X_HIGH - planes2D_high.w), EAST_MOST_X_LOW - (WEST_MOST_X_LOW - planes2D_low.w));\\n\\\n    bool idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y > 0.0;\\n\\\n    planes2D_high.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.w);\\n\\\n    planes2D_low.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.w);\\n\\\n\\n\\\n    // - else, if this vertex is on the west side of the IDL (position3DLow.y < 0.0)\\n\\\n    // - existing \\\"west\\\" is on the wrong side of the world, far away (planes2D_high/low.x)\\n\\\n    // - so set \\\"west\\\" as beyond the westmost extent of the projection (idlSplitNewPlaneHiLow)\\n\\\n    idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y < 0.0;\\n\\\n    idlSplitNewPlaneHiLow = vec2(WEST_MOST_X_HIGH - (EAST_MOST_X_HIGH - planes2D_high.x), WEST_MOST_X_LOW - (EAST_MOST_X_LOW - planes2D_low.x));\\n\\\n    planes2D_high.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.x);\\n\\\n    planes2D_low.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.x);\\n\\\n\\n\\\n    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.xy), vec3(0.0, planes2D_low.xy))).xyz;\\n\\\n    vec3 northWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.x, planes2D_high.z), vec3(0.0, planes2D_low.x, planes2D_low.z))).xyz;\\n\\\n    vec3 southEastCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.w, planes2D_high.y), vec3(0.0, planes2D_low.w, planes2D_low.y))).xyz;\\n\\\n#else // COLUMBUS_VIEW_2D\\n\\\n    // 3D case has smaller \\\"plane extents,\\\" so planes encoded as a 64 bit position and 2 vec3s for distances/direction\\n\\\n    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(czm_batchTable_southWest_HIGH(batchId), czm_batchTable_southWest_LOW(batchId))).xyz;\\n\\\n    vec3 northWestCorner = czm_normal * czm_batchTable_northward(batchId) + southWestCorner;\\n\\\n    vec3 southEastCorner = czm_normal * czm_batchTable_eastward(batchId) + southWestCorner;\\n\\\n#endif // COLUMBUS_VIEW_2D\\n\\\n\\n\\\n    vec3 eastWard = southEastCorner - southWestCorner;\\n\\\n    float eastExtent = length(eastWard);\\n\\\n    eastWard /= eastExtent;\\n\\\n\\n\\\n    vec3 northWard = northWestCorner - southWestCorner;\\n\\\n    float northExtent = length(northWard);\\n\\\n    northWard /= northExtent;\\n\\\n\\n\\\n    v_westPlane = vec4(eastWard, -dot(eastWard, southWestCorner));\\n\\\n    v_southPlane = vec4(northWard, -dot(northWard, southWestCorner));\\n\\\n    v_inversePlaneExtents = vec2(1.0 / eastExtent, 1.0 / northExtent);\\n\\\n#endif // SPHERICAL\\n\\\n    vec4 uvMinAndExtents = czm_batchTable_uvMinAndExtents(batchId);\\n\\\n    vec4 uMaxVmax = czm_batchTable_uMaxVmax(batchId);\\n\\\n\\n\\\n    v_uMaxAndInverseDistance = vec3(uMaxVmax.xy, uvMinAndExtents.z);\\n\\\n    v_vMaxAndInverseDistance = vec3(uMaxVmax.zw, uvMinAndExtents.w);\\n\\\n    v_uvMinAndSphericalLongitudeRotation.xy = uvMinAndExtents.xy;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    v_color = czm_batchTable_color(batchId);\\n\\\n#endif\\n\\\n\\n\\\n    gl_Position = czm_depthClamp(czm_modelViewProjectionRelativeToEye * position);\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":0}},{"generated":{"line":109,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1}},{"generated":{"line":110,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1},"name":"exports"},{"generated":{"line":110,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1}},{"generated":{"line":110,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1},"name":"default"},{"generated":{"line":110,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1}},{"generated":{"line":110,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1},"name":"_default"},{"generated":{"line":110,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","original":{"line":103,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\nin float batchId;\\n\\\n\\n\\\n#ifdef EXTRUDED_GEOMETRY\\n\\\nin vec3 extrudeDirection;\\n\\\n\\n\\\nuniform float u_globeMinimumAltitude;\\n\\\n#endif // EXTRUDED_GEOMETRY\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nout vec4 v_color;\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\nout vec4 v_sphericalExtents;\\n\\\n#else // SPHERICAL\\n\\\nout vec2 v_inversePlaneExtents;\\n\\\nout vec4 v_westPlane;\\n\\\nout vec4 v_southPlane;\\n\\\n#endif // SPHERICAL\\n\\\nout vec3 v_uvMinAndSphericalLongitudeRotation;\\n\\\nout vec3 v_uMaxAndInverseDistance;\\n\\\nout vec3 v_vMaxAndInverseDistance;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec4 position = czm_computePosition();\\n\\\n\\n\\\n#ifdef EXTRUDED_GEOMETRY\\n\\\n    float delta = min(u_globeMinimumAltitude, czm_geometricToleranceOverMeter * length(position.xyz));\\n\\\n    delta *= czm_sceneMode == czm_sceneMode3D ? 1.0 : 0.0;\\n\\\n\\n\\\n    //extrudeDirection is zero for the top layer\\n\\\n    position = position + vec4(extrudeDirection * delta, 0.0);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\n    v_sphericalExtents = czm_batchTable_sphericalExtents(batchId);\\n\\\n    v_uvMinAndSphericalLongitudeRotation.z = czm_batchTable_longitudeRotation(batchId);\\n\\\n#else // SPHERICAL\\n\\\n#ifdef COLUMBUS_VIEW_2D\\n\\\n    vec4 planes2D_high = czm_batchTable_planes2D_HIGH(batchId);\\n\\\n    vec4 planes2D_low = czm_batchTable_planes2D_LOW(batchId);\\n\\\n\\n\\\n    // If the primitive is split across the IDL (planes2D_high.x > planes2D_high.w):\\n\\\n    // - If this vertex is on the east side of the IDL (position3DLow.y > 0.0, comparison with position3DHigh may produce artifacts)\\n\\\n    // - existing \\\"east\\\" is on the wrong side of the world, far away (planes2D_high/low.w)\\n\\\n    // - so set \\\"east\\\" as beyond the eastmost extent of the projection (idlSplitNewPlaneHiLow)\\n\\\n    vec2 idlSplitNewPlaneHiLow = vec2(EAST_MOST_X_HIGH - (WEST_MOST_X_HIGH - planes2D_high.w), EAST_MOST_X_LOW - (WEST_MOST_X_LOW - planes2D_low.w));\\n\\\n    bool idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y > 0.0;\\n\\\n    planes2D_high.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.w);\\n\\\n    planes2D_low.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.w);\\n\\\n\\n\\\n    // - else, if this vertex is on the west side of the IDL (position3DLow.y < 0.0)\\n\\\n    // - existing \\\"west\\\" is on the wrong side of the world, far away (planes2D_high/low.x)\\n\\\n    // - so set \\\"west\\\" as beyond the westmost extent of the projection (idlSplitNewPlaneHiLow)\\n\\\n    idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y < 0.0;\\n\\\n    idlSplitNewPlaneHiLow = vec2(WEST_MOST_X_HIGH - (EAST_MOST_X_HIGH - planes2D_high.x), WEST_MOST_X_LOW - (EAST_MOST_X_LOW - planes2D_low.x));\\n\\\n    planes2D_high.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.x);\\n\\\n    planes2D_low.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.x);\\n\\\n\\n\\\n    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.xy), vec3(0.0, planes2D_low.xy))).xyz;\\n\\\n    vec3 northWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.x, planes2D_high.z), vec3(0.0, planes2D_low.x, planes2D_low.z))).xyz;\\n\\\n    vec3 southEastCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.w, planes2D_high.y), vec3(0.0, planes2D_low.w, planes2D_low.y))).xyz;\\n\\\n#else // COLUMBUS_VIEW_2D\\n\\\n    // 3D case has smaller \\\"plane extents,\\\" so planes encoded as a 64 bit position and 2 vec3s for distances/direction\\n\\\n    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(czm_batchTable_southWest_HIGH(batchId), czm_batchTable_southWest_LOW(batchId))).xyz;\\n\\\n    vec3 northWestCorner = czm_normal * czm_batchTable_northward(batchId) + southWestCorner;\\n\\\n    vec3 southEastCorner = czm_normal * czm_batchTable_eastward(batchId) + southWestCorner;\\n\\\n#endif // COLUMBUS_VIEW_2D\\n\\\n\\n\\\n    vec3 eastWard = southEastCorner - southWestCorner;\\n\\\n    float eastExtent = length(eastWard);\\n\\\n    eastWard /= eastExtent;\\n\\\n\\n\\\n    vec3 northWard = northWestCorner - southWestCorner;\\n\\\n    float northExtent = length(northWard);\\n\\\n    northWard /= northExtent;\\n\\\n\\n\\\n    v_westPlane = vec4(eastWard, -dot(eastWard, southWestCorner));\\n\\\n    v_southPlane = vec4(northWard, -dot(northWard, southWestCorner));\\n\\\n    v_inversePlaneExtents = vec2(1.0 / eastExtent, 1.0 / northExtent);\\n\\\n#endif // SPHERICAL\\n\\\n    vec4 uvMinAndExtents = czm_batchTable_uvMinAndExtents(batchId);\\n\\\n    vec4 uMaxVmax = czm_batchTable_uMaxVmax(batchId);\\n\\\n\\n\\\n    v_uMaxAndInverseDistance = vec3(uMaxVmax.xy, uvMinAndExtents.z);\\n\\\n    v_vMaxAndInverseDistance = vec3(uMaxVmax.zw, uvMinAndExtents.w);\\n\\\n    v_uvMinAndSphericalLongitudeRotation.xy = uvMinAndExtents.xy;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    v_color = czm_batchTable_color(batchId);\\n\\\n#endif\\n\\\n\\n\\\n    gl_Position = czm_depthClamp(czm_modelViewProjectionRelativeToEye * position);\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"67016f1086231a1f8615b05ba555d735","cacheData":{"env":{}}}