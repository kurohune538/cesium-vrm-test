{"id":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"vec3 proceduralIBL(\\n\\\n    vec3 positionEC,\\n\\\n    vec3 normalEC,\\n\\\n    vec3 lightDirectionEC,\\n\\\n    vec3 lightColorHdr,\\n\\\n    czm_pbrParameters pbrParameters\\n\\\n) {\\n\\\n    vec3 v = -positionEC;\\n\\\n    vec3 positionWC = vec3(czm_inverseView * vec4(positionEC, 1.0));\\n\\\n    vec3 vWC = -normalize(positionWC);\\n\\\n    vec3 l = normalize(lightDirectionEC);\\n\\\n    vec3 n = normalEC;\\n\\\n    vec3 r = normalize(czm_inverseViewRotation * normalize(reflect(v, n)));\\n\\\n\\n\\\n    float NdotL = clamp(dot(n, l), 0.001, 1.0);\\n\\\n    float NdotV = abs(dot(n, v)) + 0.001;\\n\\\n\\n\\\n    // Figure out if the reflection vector hits the ellipsoid\\n\\\n    float vertexRadius = length(positionWC);\\n\\\n    float horizonDotNadir = 1.0 - min(1.0, czm_ellipsoidRadii.x / vertexRadius);\\n\\\n    float reflectionDotNadir = dot(r, normalize(positionWC));\\n\\\n    // Flipping the X vector is a cheap way to get the inverse of czm_temeToPseudoFixed, since that's a rotation about Z.\\n\\\n    r.x = -r.x;\\n\\\n    r = -normalize(czm_temeToPseudoFixed * r);\\n\\\n    r.x = -r.x;\\n\\\n\\n\\\n    vec3 diffuseColor = pbrParameters.diffuseColor;\\n\\\n    float roughness = pbrParameters.roughness;\\n\\\n    vec3 specularColor = pbrParameters.f0;\\n\\\n\\n\\\n    float inverseRoughness = 1.04 - roughness;\\n\\\n    inverseRoughness *= inverseRoughness;\\n\\\n    vec3 sceneSkyBox = czm_textureCube(czm_environmentMap, r).rgb * inverseRoughness;\\n\\\n\\n\\\n    float atmosphereHeight = 0.05;\\n\\\n    float blendRegionSize = 0.1 * ((1.0 - inverseRoughness) * 8.0 + 1.1 - horizonDotNadir);\\n\\\n    float blendRegionOffset = roughness * -1.0;\\n\\\n    float farAboveHorizon = clamp(horizonDotNadir - blendRegionSize * 0.5 + blendRegionOffset, 1.0e-10 - blendRegionSize, 0.99999);\\n\\\n    float aroundHorizon = clamp(horizonDotNadir + blendRegionSize * 0.5, 1.0e-10 - blendRegionSize, 0.99999);\\n\\\n    float farBelowHorizon = clamp(horizonDotNadir + blendRegionSize * 1.5, 1.0e-10 - blendRegionSize, 0.99999);\\n\\\n    float smoothstepHeight = smoothstep(0.0, atmosphereHeight, horizonDotNadir);\\n\\\n    vec3 belowHorizonColor = mix(vec3(0.1, 0.15, 0.25), vec3(0.4, 0.7, 0.9), smoothstepHeight);\\n\\\n    vec3 nadirColor = belowHorizonColor * 0.5;\\n\\\n    vec3 aboveHorizonColor = mix(vec3(0.9, 1.0, 1.2), belowHorizonColor, roughness * 0.5);\\n\\\n    vec3 blueSkyColor = mix(vec3(0.18, 0.26, 0.48), aboveHorizonColor, reflectionDotNadir * inverseRoughness * 0.5 + 0.75);\\n\\\n    vec3 zenithColor = mix(blueSkyColor, sceneSkyBox, smoothstepHeight);\\n\\\n    vec3 blueSkyDiffuseColor = vec3(0.7, 0.85, 0.9); \\n\\\n    float diffuseIrradianceFromEarth = (1.0 - horizonDotNadir) * (reflectionDotNadir * 0.25 + 0.75) * smoothstepHeight;  \\n\\\n    float diffuseIrradianceFromSky = (1.0 - smoothstepHeight) * (1.0 - (reflectionDotNadir * 0.25 + 0.25));\\n\\\n    vec3 diffuseIrradiance = blueSkyDiffuseColor * clamp(diffuseIrradianceFromEarth + diffuseIrradianceFromSky, 0.0, 1.0);\\n\\\n    float notDistantRough = (1.0 - horizonDotNadir * roughness * 0.8);\\n\\\n    vec3 specularIrradiance = mix(zenithColor, aboveHorizonColor, smoothstep(farAboveHorizon, aroundHorizon, reflectionDotNadir) * notDistantRough);\\n\\\n    specularIrradiance = mix(specularIrradiance, belowHorizonColor, smoothstep(aroundHorizon, farBelowHorizon, reflectionDotNadir) * inverseRoughness);\\n\\\n    specularIrradiance = mix(specularIrradiance, nadirColor, smoothstep(farBelowHorizon, 1.0, reflectionDotNadir) * inverseRoughness);\\n\\\n\\n\\\n    // Luminance model from page 40 of http://silviojemma.com/public/papers/lighting/spherical-harmonic-lighting.pdf\\n\\\n    #ifdef USE_SUN_LUMINANCE \\n\\\n    // Angle between sun and zenith\\n\\\n    float LdotZenith = clamp(dot(normalize(czm_inverseViewRotation * l), vWC), 0.001, 1.0);\\n\\\n    float S = acos(LdotZenith);\\n\\\n    // Angle between zenith and current pixel\\n\\\n    float NdotZenith = clamp(dot(normalize(czm_inverseViewRotation * n), vWC), 0.001, 1.0);\\n\\\n    // Angle between sun and current pixel\\n\\\n    float gamma = acos(NdotL);\\n\\\n    float numerator = ((0.91 + 10.0 * exp(-3.0 * gamma) + 0.45 * pow(NdotL, 2.0)) * (1.0 - exp(-0.32 / NdotZenith)));\\n\\\n    float denominator = (0.91 + 10.0 * exp(-3.0 * S) + 0.45 * pow(LdotZenith,2.0)) * (1.0 - exp(-0.32));\\n\\\n    float luminance = model_luminanceAtZenith * (numerator / denominator);\\n\\\n    #endif \\n\\\n\\n\\\n    vec2 brdfLut = texture(czm_brdfLut, vec2(NdotV, roughness)).rg;\\n\\\n    vec3 iblColor = (diffuseIrradiance * diffuseColor * model_iblFactor.x) + (specularIrradiance * czm_srgbToLinear(specularColor * brdfLut.x + brdfLut.y) * model_iblFactor.y);\\n\\\n    float maximumComponent = max(max(lightColorHdr.x, lightColorHdr.y), lightColorHdr.z);\\n\\\n    vec3 lightColor = lightColorHdr / max(maximumComponent, 1.0);\\n\\\n    iblColor *= lightColor;\\n\\\n\\n\\\n    #ifdef USE_SUN_LUMINANCE \\n\\\n    iblColor *= luminance;\\n\\\n    #endif\\n\\\n\\n\\\n    return iblColor;\\n\\\n}\\n\\\n\\n\\\n#if defined(DIFFUSE_IBL) || defined(SPECULAR_IBL)\\n\\\nvec3 textureIBL(\\n\\\n    vec3 positionEC,\\n\\\n    vec3 normalEC,\\n\\\n    vec3 lightDirectionEC,\\n\\\n    czm_pbrParameters pbrParameters\\n\\\n) {\\n\\\n    vec3 diffuseColor = pbrParameters.diffuseColor;\\n\\\n    float roughness = pbrParameters.roughness;\\n\\\n    vec3 specularColor = pbrParameters.f0;\\n\\\n\\n\\\n    vec3 v = -positionEC;\\n\\\n    vec3 n = normalEC;\\n\\\n    vec3 l = normalize(lightDirectionEC);\\n\\\n    vec3 h = normalize(v + l);\\n\\\n\\n\\\n    float NdotV = abs(dot(n, v)) + 0.001;\\n\\\n    float VdotH = clamp(dot(v, h), 0.0, 1.0);\\n\\\n\\n\\\n    const mat3 yUpToZUp = mat3(\\n\\\n        -1.0, 0.0, 0.0,\\n\\\n        0.0, 0.0, -1.0, \\n\\\n        0.0, 1.0, 0.0\\n\\\n    ); \\n\\\n    vec3 cubeDir = normalize(yUpToZUp * model_iblReferenceFrameMatrix * normalize(reflect(-v, n))); \\n\\\n\\n\\\n    #ifdef DIFFUSE_IBL \\n\\\n        #ifdef CUSTOM_SPHERICAL_HARMONICS\\n\\\n        vec3 diffuseIrradiance = czm_sphericalHarmonics(cubeDir, model_sphericalHarmonicCoefficients); \\n\\\n        #else\\n\\\n        vec3 diffuseIrradiance = czm_sphericalHarmonics(cubeDir, czm_sphericalHarmonicCoefficients); \\n\\\n        #endif \\n\\\n    #else \\n\\\n    vec3 diffuseIrradiance = vec3(0.0); \\n\\\n    #endif \\n\\\n\\n\\\n    #ifdef SPECULAR_IBL\\n\\\n    vec3 r0 = specularColor.rgb;\\n\\\n    float reflectance = max(max(r0.r, r0.g), r0.b);\\n\\\n    vec3 r90 = vec3(clamp(reflectance * 25.0, 0.0, 1.0));\\n\\\n    vec3 F = fresnelSchlick2(r0, r90, VdotH);\\n\\\n    \\n\\\n    vec2 brdfLut = texture(czm_brdfLut, vec2(NdotV, roughness)).rg;\\n\\\n      #ifdef CUSTOM_SPECULAR_IBL \\n\\\n      vec3 specularIBL = czm_sampleOctahedralProjection(model_specularEnvironmentMaps, model_specularEnvironmentMapsSize, cubeDir, roughness * model_specularEnvironmentMapsMaximumLOD, model_specularEnvironmentMapsMaximumLOD);\\n\\\n      #else \\n\\\n      vec3 specularIBL = czm_sampleOctahedralProjection(czm_specularEnvironmentMaps, czm_specularEnvironmentMapSize, cubeDir,  roughness * czm_specularEnvironmentMapsMaximumLOD, czm_specularEnvironmentMapsMaximumLOD);\\n\\\n      #endif \\n\\\n    specularIBL *= F * brdfLut.x + brdfLut.y;\\n\\\n    #else \\n\\\n    vec3 specularIBL = vec3(0.0); \\n\\\n    #endif\\n\\\n\\n\\\n    return diffuseColor * diffuseIrradiance + specularColor * specularIBL;\\n\\\n}\\n\\\n#endif\\n\\\n\\n\\\nvec3 imageBasedLightingStage(\\n\\\n    vec3 positionEC,\\n\\\n    vec3 normalEC,\\n\\\n    vec3 lightDirectionEC,\\n\\\n    vec3 lightColorHdr,\\n\\\n    czm_pbrParameters pbrParameters\\n\\\n) {\\n\\\n  #if defined(DIFFUSE_IBL) || defined(SPECULAR_IBL)\\n\\\n  // Environment maps were provided, use them for IBL\\n\\\n  return textureIBL(\\n\\\n      positionEC,\\n\\\n      normalEC,\\n\\\n      lightDirectionEC,\\n\\\n      pbrParameters\\n\\\n  );\\n\\\n  #else\\n\\\n  // Use the procedural IBL if there are no environment maps\\n\\\n  return proceduralIBL(\\n\\\n      positionEC,\\n\\\n      normalEC,\\n\\\n      lightDirectionEC,\\n\\\n      lightColorHdr,\\n\\\n      pbrParameters\\n\\\n  );\\n\\\n  #endif\\n\\\n}\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":0}},{"generated":{"line":172,"column":2},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2}},{"generated":{"line":173,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2},"name":"exports"},{"generated":{"line":173,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2}},{"generated":{"line":173,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2},"name":"default"},{"generated":{"line":173,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2}},{"generated":{"line":173,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2},"name":"_default"},{"generated":{"line":173,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js","original":{"line":166,"column":2}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Model/ImageBasedLightingStageFS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"vec3 proceduralIBL(\\n\\\n    vec3 positionEC,\\n\\\n    vec3 normalEC,\\n\\\n    vec3 lightDirectionEC,\\n\\\n    vec3 lightColorHdr,\\n\\\n    czm_pbrParameters pbrParameters\\n\\\n) {\\n\\\n    vec3 v = -positionEC;\\n\\\n    vec3 positionWC = vec3(czm_inverseView * vec4(positionEC, 1.0));\\n\\\n    vec3 vWC = -normalize(positionWC);\\n\\\n    vec3 l = normalize(lightDirectionEC);\\n\\\n    vec3 n = normalEC;\\n\\\n    vec3 r = normalize(czm_inverseViewRotation * normalize(reflect(v, n)));\\n\\\n\\n\\\n    float NdotL = clamp(dot(n, l), 0.001, 1.0);\\n\\\n    float NdotV = abs(dot(n, v)) + 0.001;\\n\\\n\\n\\\n    // Figure out if the reflection vector hits the ellipsoid\\n\\\n    float vertexRadius = length(positionWC);\\n\\\n    float horizonDotNadir = 1.0 - min(1.0, czm_ellipsoidRadii.x / vertexRadius);\\n\\\n    float reflectionDotNadir = dot(r, normalize(positionWC));\\n\\\n    // Flipping the X vector is a cheap way to get the inverse of czm_temeToPseudoFixed, since that's a rotation about Z.\\n\\\n    r.x = -r.x;\\n\\\n    r = -normalize(czm_temeToPseudoFixed * r);\\n\\\n    r.x = -r.x;\\n\\\n\\n\\\n    vec3 diffuseColor = pbrParameters.diffuseColor;\\n\\\n    float roughness = pbrParameters.roughness;\\n\\\n    vec3 specularColor = pbrParameters.f0;\\n\\\n\\n\\\n    float inverseRoughness = 1.04 - roughness;\\n\\\n    inverseRoughness *= inverseRoughness;\\n\\\n    vec3 sceneSkyBox = czm_textureCube(czm_environmentMap, r).rgb * inverseRoughness;\\n\\\n\\n\\\n    float atmosphereHeight = 0.05;\\n\\\n    float blendRegionSize = 0.1 * ((1.0 - inverseRoughness) * 8.0 + 1.1 - horizonDotNadir);\\n\\\n    float blendRegionOffset = roughness * -1.0;\\n\\\n    float farAboveHorizon = clamp(horizonDotNadir - blendRegionSize * 0.5 + blendRegionOffset, 1.0e-10 - blendRegionSize, 0.99999);\\n\\\n    float aroundHorizon = clamp(horizonDotNadir + blendRegionSize * 0.5, 1.0e-10 - blendRegionSize, 0.99999);\\n\\\n    float farBelowHorizon = clamp(horizonDotNadir + blendRegionSize * 1.5, 1.0e-10 - blendRegionSize, 0.99999);\\n\\\n    float smoothstepHeight = smoothstep(0.0, atmosphereHeight, horizonDotNadir);\\n\\\n    vec3 belowHorizonColor = mix(vec3(0.1, 0.15, 0.25), vec3(0.4, 0.7, 0.9), smoothstepHeight);\\n\\\n    vec3 nadirColor = belowHorizonColor * 0.5;\\n\\\n    vec3 aboveHorizonColor = mix(vec3(0.9, 1.0, 1.2), belowHorizonColor, roughness * 0.5);\\n\\\n    vec3 blueSkyColor = mix(vec3(0.18, 0.26, 0.48), aboveHorizonColor, reflectionDotNadir * inverseRoughness * 0.5 + 0.75);\\n\\\n    vec3 zenithColor = mix(blueSkyColor, sceneSkyBox, smoothstepHeight);\\n\\\n    vec3 blueSkyDiffuseColor = vec3(0.7, 0.85, 0.9); \\n\\\n    float diffuseIrradianceFromEarth = (1.0 - horizonDotNadir) * (reflectionDotNadir * 0.25 + 0.75) * smoothstepHeight;  \\n\\\n    float diffuseIrradianceFromSky = (1.0 - smoothstepHeight) * (1.0 - (reflectionDotNadir * 0.25 + 0.25));\\n\\\n    vec3 diffuseIrradiance = blueSkyDiffuseColor * clamp(diffuseIrradianceFromEarth + diffuseIrradianceFromSky, 0.0, 1.0);\\n\\\n    float notDistantRough = (1.0 - horizonDotNadir * roughness * 0.8);\\n\\\n    vec3 specularIrradiance = mix(zenithColor, aboveHorizonColor, smoothstep(farAboveHorizon, aroundHorizon, reflectionDotNadir) * notDistantRough);\\n\\\n    specularIrradiance = mix(specularIrradiance, belowHorizonColor, smoothstep(aroundHorizon, farBelowHorizon, reflectionDotNadir) * inverseRoughness);\\n\\\n    specularIrradiance = mix(specularIrradiance, nadirColor, smoothstep(farBelowHorizon, 1.0, reflectionDotNadir) * inverseRoughness);\\n\\\n\\n\\\n    // Luminance model from page 40 of http://silviojemma.com/public/papers/lighting/spherical-harmonic-lighting.pdf\\n\\\n    #ifdef USE_SUN_LUMINANCE \\n\\\n    // Angle between sun and zenith\\n\\\n    float LdotZenith = clamp(dot(normalize(czm_inverseViewRotation * l), vWC), 0.001, 1.0);\\n\\\n    float S = acos(LdotZenith);\\n\\\n    // Angle between zenith and current pixel\\n\\\n    float NdotZenith = clamp(dot(normalize(czm_inverseViewRotation * n), vWC), 0.001, 1.0);\\n\\\n    // Angle between sun and current pixel\\n\\\n    float gamma = acos(NdotL);\\n\\\n    float numerator = ((0.91 + 10.0 * exp(-3.0 * gamma) + 0.45 * pow(NdotL, 2.0)) * (1.0 - exp(-0.32 / NdotZenith)));\\n\\\n    float denominator = (0.91 + 10.0 * exp(-3.0 * S) + 0.45 * pow(LdotZenith,2.0)) * (1.0 - exp(-0.32));\\n\\\n    float luminance = model_luminanceAtZenith * (numerator / denominator);\\n\\\n    #endif \\n\\\n\\n\\\n    vec2 brdfLut = texture(czm_brdfLut, vec2(NdotV, roughness)).rg;\\n\\\n    vec3 iblColor = (diffuseIrradiance * diffuseColor * model_iblFactor.x) + (specularIrradiance * czm_srgbToLinear(specularColor * brdfLut.x + brdfLut.y) * model_iblFactor.y);\\n\\\n    float maximumComponent = max(max(lightColorHdr.x, lightColorHdr.y), lightColorHdr.z);\\n\\\n    vec3 lightColor = lightColorHdr / max(maximumComponent, 1.0);\\n\\\n    iblColor *= lightColor;\\n\\\n\\n\\\n    #ifdef USE_SUN_LUMINANCE \\n\\\n    iblColor *= luminance;\\n\\\n    #endif\\n\\\n\\n\\\n    return iblColor;\\n\\\n}\\n\\\n\\n\\\n#if defined(DIFFUSE_IBL) || defined(SPECULAR_IBL)\\n\\\nvec3 textureIBL(\\n\\\n    vec3 positionEC,\\n\\\n    vec3 normalEC,\\n\\\n    vec3 lightDirectionEC,\\n\\\n    czm_pbrParameters pbrParameters\\n\\\n) {\\n\\\n    vec3 diffuseColor = pbrParameters.diffuseColor;\\n\\\n    float roughness = pbrParameters.roughness;\\n\\\n    vec3 specularColor = pbrParameters.f0;\\n\\\n\\n\\\n    vec3 v = -positionEC;\\n\\\n    vec3 n = normalEC;\\n\\\n    vec3 l = normalize(lightDirectionEC);\\n\\\n    vec3 h = normalize(v + l);\\n\\\n\\n\\\n    float NdotV = abs(dot(n, v)) + 0.001;\\n\\\n    float VdotH = clamp(dot(v, h), 0.0, 1.0);\\n\\\n\\n\\\n    const mat3 yUpToZUp = mat3(\\n\\\n        -1.0, 0.0, 0.0,\\n\\\n        0.0, 0.0, -1.0, \\n\\\n        0.0, 1.0, 0.0\\n\\\n    ); \\n\\\n    vec3 cubeDir = normalize(yUpToZUp * model_iblReferenceFrameMatrix * normalize(reflect(-v, n))); \\n\\\n\\n\\\n    #ifdef DIFFUSE_IBL \\n\\\n        #ifdef CUSTOM_SPHERICAL_HARMONICS\\n\\\n        vec3 diffuseIrradiance = czm_sphericalHarmonics(cubeDir, model_sphericalHarmonicCoefficients); \\n\\\n        #else\\n\\\n        vec3 diffuseIrradiance = czm_sphericalHarmonics(cubeDir, czm_sphericalHarmonicCoefficients); \\n\\\n        #endif \\n\\\n    #else \\n\\\n    vec3 diffuseIrradiance = vec3(0.0); \\n\\\n    #endif \\n\\\n\\n\\\n    #ifdef SPECULAR_IBL\\n\\\n    vec3 r0 = specularColor.rgb;\\n\\\n    float reflectance = max(max(r0.r, r0.g), r0.b);\\n\\\n    vec3 r90 = vec3(clamp(reflectance * 25.0, 0.0, 1.0));\\n\\\n    vec3 F = fresnelSchlick2(r0, r90, VdotH);\\n\\\n    \\n\\\n    vec2 brdfLut = texture(czm_brdfLut, vec2(NdotV, roughness)).rg;\\n\\\n      #ifdef CUSTOM_SPECULAR_IBL \\n\\\n      vec3 specularIBL = czm_sampleOctahedralProjection(model_specularEnvironmentMaps, model_specularEnvironmentMapsSize, cubeDir, roughness * model_specularEnvironmentMapsMaximumLOD, model_specularEnvironmentMapsMaximumLOD);\\n\\\n      #else \\n\\\n      vec3 specularIBL = czm_sampleOctahedralProjection(czm_specularEnvironmentMaps, czm_specularEnvironmentMapSize, cubeDir,  roughness * czm_specularEnvironmentMapsMaximumLOD, czm_specularEnvironmentMapsMaximumLOD);\\n\\\n      #endif \\n\\\n    specularIBL *= F * brdfLut.x + brdfLut.y;\\n\\\n    #else \\n\\\n    vec3 specularIBL = vec3(0.0); \\n\\\n    #endif\\n\\\n\\n\\\n    return diffuseColor * diffuseIrradiance + specularColor * specularIBL;\\n\\\n}\\n\\\n#endif\\n\\\n\\n\\\nvec3 imageBasedLightingStage(\\n\\\n    vec3 positionEC,\\n\\\n    vec3 normalEC,\\n\\\n    vec3 lightDirectionEC,\\n\\\n    vec3 lightColorHdr,\\n\\\n    czm_pbrParameters pbrParameters\\n\\\n) {\\n\\\n  #if defined(DIFFUSE_IBL) || defined(SPECULAR_IBL)\\n\\\n  // Environment maps were provided, use them for IBL\\n\\\n  return textureIBL(\\n\\\n      positionEC,\\n\\\n      normalEC,\\n\\\n      lightDirectionEC,\\n\\\n      pbrParameters\\n\\\n  );\\n\\\n  #else\\n\\\n  // Use the procedural IBL if there are no environment maps\\n\\\n  return proceduralIBL(\\n\\\n      positionEC,\\n\\\n      normalEC,\\n\\\n      lightDirectionEC,\\n\\\n      lightColorHdr,\\n\\\n      pbrParameters\\n\\\n  );\\n\\\n  #endif\\n\\\n}\";\n"},"lineCount":null}},"error":null,"hash":"7a74e3a08076f234d086947bc3dc999a","cacheData":{"env":{}}}