{"id":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"// See IntersectionUtils.glsl for the definitions of Ray and NO_HIT\\n\\\n// See convertUvToBox.glsl for the definition of convertShapeUvToUvSpace\\n\\\n\\n\\\n/* Box defines (set in Scene/VoxelBoxShape.js)\\n\\\n#define BOX_INTERSECTION_INDEX ### // always 0\\n\\\n*/\\n\\\n\\n\\\nuniform vec3 u_renderMinBounds;\\n\\\nuniform vec3 u_renderMaxBounds;\\n\\\n\\n\\\nstruct Box {\\n\\\n    vec3 p0;\\n\\\n    vec3 p1;\\n\\\n};\\n\\\n\\n\\\nBox constructVoxelBox(in ivec4 octreeCoords, in vec3 tileUv)\\n\\\n{\\n\\\n    // Find the min/max cornerpoints of the voxel in tile coordinates\\n\\\n    vec3 tileOrigin = vec3(octreeCoords.xyz);\\n\\\n    vec3 numSamples = vec3(u_dimensions);\\n\\\n    vec3 voxelSize = 1.0 / numSamples;\\n\\\n    vec3 coordP0 = floor(tileUv * numSamples) * voxelSize + tileOrigin;\\n\\\n    vec3 coordP1 = coordP0 + voxelSize;\\n\\\n\\n\\\n    // Transform to the UV coordinates of the scaled tileset\\n\\\n    float tileSize = 1.0 / pow(2.0, float(octreeCoords.w));\\n\\\n    vec3 p0 = convertShapeUvToUvSpace(coordP0 * tileSize);\\n\\\n    vec3 p1 = convertShapeUvToUvSpace(coordP1 * tileSize);\\n\\\n\\n\\\n    return Box(p0, p1);\\n\\\n}\\n\\\n\\n\\\nvec3 getBoxNormal(in Box box, in Ray ray, in float t)\\n\\\n{\\n\\\n    vec3 hitPoint = ray.pos + t * ray.dir;\\n\\\n    vec3 lower = step(hitPoint, box.p0);\\n\\\n    vec3 upper = step(box.p1, hitPoint);\\n\\\n    return normalize(upper - lower);\\n\\\n}\\n\\\n\\n\\\n// Find the distances along a ray at which the ray intersects an axis-aligned box\\n\\\n// See https://tavianator.com/2011/ray_box.html\\n\\\nRayShapeIntersection intersectBox(in Ray ray, in Box box)\\n\\\n{\\n\\\n    // Consider the box as the intersection of the space between 3 pairs of parallel planes\\n\\\n    // Compute the distance along the ray to each plane\\n\\\n    vec3 t0 = (box.p0 - ray.pos) * ray.dInv;\\n\\\n    vec3 t1 = (box.p1 - ray.pos) * ray.dInv;\\n\\\n\\n\\\n    // Identify candidate entries/exits based on distance from ray.pos\\n\\\n    vec3 entries = min(t0, t1);\\n\\\n    vec3 exits = max(t0, t1);\\n\\\n\\n\\\n    // The actual box intersection points are the furthest entry and the closest exit\\n\\\n    float entryT = max(max(entries.x, entries.y), entries.z);\\n\\\n    float exitT = min(min(exits.x, exits.y), exits.z);\\n\\\n\\n\\\n    vec3 entryNormal = getBoxNormal(box, ray, entryT - RAY_SHIFT);\\n\\\n    vec3 exitNormal = getBoxNormal(box, ray, exitT + RAY_SHIFT);\\n\\\n\\n\\\n    if (entryT > exitT) {\\n\\\n        entryT = NO_HIT;\\n\\\n        exitT = NO_HIT;\\n\\\n    }\\n\\\n\\n\\\n    return RayShapeIntersection(vec4(entryNormal, entryT), vec4(exitNormal, exitT));\\n\\\n}\\n\\\n\\n\\\nvoid intersectShape(in Ray ray, inout Intersections ix)\\n\\\n{\\n\\\n    RayShapeIntersection intersection = intersectBox(ray, Box(u_renderMinBounds, u_renderMaxBounds));\\n\\\n    setShapeIntersection(ix, BOX_INTERSECTION_INDEX, intersection);\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":0}},{"generated":{"line":81,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1},"name":"exports"},{"generated":{"line":82,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1}},{"generated":{"line":82,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1},"name":"default"},{"generated":{"line":82,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1}},{"generated":{"line":82,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1},"name":"_default"},{"generated":{"line":82,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js","original":{"line":75,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectBox.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"// See IntersectionUtils.glsl for the definitions of Ray and NO_HIT\\n\\\n// See convertUvToBox.glsl for the definition of convertShapeUvToUvSpace\\n\\\n\\n\\\n/* Box defines (set in Scene/VoxelBoxShape.js)\\n\\\n#define BOX_INTERSECTION_INDEX ### // always 0\\n\\\n*/\\n\\\n\\n\\\nuniform vec3 u_renderMinBounds;\\n\\\nuniform vec3 u_renderMaxBounds;\\n\\\n\\n\\\nstruct Box {\\n\\\n    vec3 p0;\\n\\\n    vec3 p1;\\n\\\n};\\n\\\n\\n\\\nBox constructVoxelBox(in ivec4 octreeCoords, in vec3 tileUv)\\n\\\n{\\n\\\n    // Find the min/max cornerpoints of the voxel in tile coordinates\\n\\\n    vec3 tileOrigin = vec3(octreeCoords.xyz);\\n\\\n    vec3 numSamples = vec3(u_dimensions);\\n\\\n    vec3 voxelSize = 1.0 / numSamples;\\n\\\n    vec3 coordP0 = floor(tileUv * numSamples) * voxelSize + tileOrigin;\\n\\\n    vec3 coordP1 = coordP0 + voxelSize;\\n\\\n\\n\\\n    // Transform to the UV coordinates of the scaled tileset\\n\\\n    float tileSize = 1.0 / pow(2.0, float(octreeCoords.w));\\n\\\n    vec3 p0 = convertShapeUvToUvSpace(coordP0 * tileSize);\\n\\\n    vec3 p1 = convertShapeUvToUvSpace(coordP1 * tileSize);\\n\\\n\\n\\\n    return Box(p0, p1);\\n\\\n}\\n\\\n\\n\\\nvec3 getBoxNormal(in Box box, in Ray ray, in float t)\\n\\\n{\\n\\\n    vec3 hitPoint = ray.pos + t * ray.dir;\\n\\\n    vec3 lower = step(hitPoint, box.p0);\\n\\\n    vec3 upper = step(box.p1, hitPoint);\\n\\\n    return normalize(upper - lower);\\n\\\n}\\n\\\n\\n\\\n// Find the distances along a ray at which the ray intersects an axis-aligned box\\n\\\n// See https://tavianator.com/2011/ray_box.html\\n\\\nRayShapeIntersection intersectBox(in Ray ray, in Box box)\\n\\\n{\\n\\\n    // Consider the box as the intersection of the space between 3 pairs of parallel planes\\n\\\n    // Compute the distance along the ray to each plane\\n\\\n    vec3 t0 = (box.p0 - ray.pos) * ray.dInv;\\n\\\n    vec3 t1 = (box.p1 - ray.pos) * ray.dInv;\\n\\\n\\n\\\n    // Identify candidate entries/exits based on distance from ray.pos\\n\\\n    vec3 entries = min(t0, t1);\\n\\\n    vec3 exits = max(t0, t1);\\n\\\n\\n\\\n    // The actual box intersection points are the furthest entry and the closest exit\\n\\\n    float entryT = max(max(entries.x, entries.y), entries.z);\\n\\\n    float exitT = min(min(exits.x, exits.y), exits.z);\\n\\\n\\n\\\n    vec3 entryNormal = getBoxNormal(box, ray, entryT - RAY_SHIFT);\\n\\\n    vec3 exitNormal = getBoxNormal(box, ray, exitT + RAY_SHIFT);\\n\\\n\\n\\\n    if (entryT > exitT) {\\n\\\n        entryT = NO_HIT;\\n\\\n        exitT = NO_HIT;\\n\\\n    }\\n\\\n\\n\\\n    return RayShapeIntersection(vec4(entryNormal, entryT), vec4(exitNormal, exitT));\\n\\\n}\\n\\\n\\n\\\nvoid intersectShape(in Ray ray, inout Intersections ix)\\n\\\n{\\n\\\n    RayShapeIntersection intersection = intersectBox(ray, Box(u_renderMinBounds, u_renderMaxBounds));\\n\\\n    setShapeIntersection(ix, BOX_INTERSECTION_INDEX, intersection);\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"daa0859925c570b97115bc7bd341bd82","cacheData":{"env":{}}}