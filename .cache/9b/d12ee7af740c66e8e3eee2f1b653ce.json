{"id":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"// See Octree.glsl for the definitions of SampleData and intMod\\n\\\n\\n\\\n/* Megatexture defines (set in Scene/VoxelRenderResources.js)\\n\\\n#define SAMPLE_COUNT ###\\n\\\n#define NEAREST_SAMPLING\\n\\\n#define PADDING\\n\\\n*/\\n\\\n\\n\\\nuniform ivec2 u_megatextureSliceDimensions; // number of slices per tile, in two dimensions\\n\\\nuniform ivec2 u_megatextureTileDimensions; // number of tiles per megatexture, in two dimensions\\n\\\nuniform vec2 u_megatextureVoxelSizeUv;\\n\\\nuniform vec2 u_megatextureSliceSizeUv;\\n\\\nuniform vec2 u_megatextureTileSizeUv;\\n\\\n\\n\\\nuniform ivec3 u_dimensions; // does not include padding\\n\\\n#if defined(PADDING)\\n\\\n    uniform ivec3 u_paddingBefore;\\n\\\n    uniform ivec3 u_paddingAfter;\\n\\\n#endif\\n\\\n\\n\\\n// Integer min, max, clamp: For WebGL1 only\\n\\\nint intMin(int a, int b) {\\n\\\n    return a <= b ? a : b;\\n\\\n}\\n\\\nint intMax(int a, int b) {\\n\\\n    return a >= b ? a : b;\\n\\\n}\\n\\\nint intClamp(int v, int minVal, int maxVal) {\\n\\\n    return intMin(intMax(v, minVal), maxVal);\\n\\\n}\\n\\\n\\n\\\nvec2 index1DTo2DTexcoord(int index, ivec2 dimensions, vec2 uvScale)\\n\\\n{\\n\\\n    int indexX = intMod(index, dimensions.x);\\n\\\n    int indexY = index / dimensions.x;\\n\\\n    return vec2(indexX, indexY) * uvScale;\\n\\\n}\\n\\\n\\n\\\n/*\\n\\\n    How is 3D data stored in a 2D megatexture?\\n\\\n\\n\\\n    In this example there is only one loaded tile and it has 2x2x2 voxels (8 voxels total).\\n\\\n    The data is sliced by Z. The data at Z = 0 is placed in texels (0,0), (0,1), (1,0), (1,1) and\\n\\\n    the data at Z = 1 is placed in texels (2,0), (2,1), (3,0), (3,1).\\n\\\n    Note that there could be empty space in the megatexture because it's a power of two.\\n\\\n\\n\\\n      0   1   2   3\\n\\\n    +---+---+---+---+\\n\\\n    |   |   |   |   | 3\\n\\\n    +---+---+---+---+\\n\\\n    |   |   |   |   | 2\\n\\\n    +-------+-------+\\n\\\n    |010|110|011|111| 1\\n\\\n    |--- ---|--- ---|\\n\\\n    |000|100|001|101| 0\\n\\\n    +-------+-------+\\n\\\n\\n\\\n    When doing linear interpolation the megatexture needs to be sampled twice: once for\\n\\\n    the Z slice above the voxel coordinate and once for the slice below. The two slices\\n\\\n    are interpolated with fract(coord.z - 0.5). For example, a Z coordinate of 1.0 is\\n\\\n    halfway between two Z slices so the interpolation factor is 0.5. Below is a side view\\n\\\n    of the 3D voxel grid with voxel coordinates on the left side.\\n\\\n\\n\\\n    2 +---+\\n\\\n      |001|\\n\\\n    1 +-z-+\\n\\\n      |000|\\n\\\n    0 +---+\\n\\\n\\n\\\n    When doing nearest neighbor the megatexture only needs to be sampled once at the closest Z slice.\\n\\\n*/\\n\\\n\\n\\\nProperties getPropertiesFromMegatexture(in SampleData sampleData) {\\n\\\n    vec3 tileUv = clamp(sampleData.tileUv, vec3(0.0), vec3(1.0)); // TODO is the clamp necessary?\\n\\\n    int tileIndex = sampleData.megatextureIndex;\\n\\\n    vec3 voxelCoord = tileUv * vec3(u_dimensions);\\n\\\n    ivec3 voxelDimensions = u_dimensions;\\n\\\n\\n\\\n    #if defined(PADDING)\\n\\\n        voxelDimensions += u_paddingBefore + u_paddingAfter;\\n\\\n        voxelCoord += vec3(u_paddingBefore);\\n\\\n    #endif\\n\\\n\\n\\\n    #if defined(NEAREST_SAMPLING)\\n\\\n        // Round to the center of the nearest voxel\\n\\\n        voxelCoord = floor(voxelCoord) + vec3(0.5);\\n\\\n    #endif\\n\\\n\\n\\\n    // Tile location\\n\\\n    vec2 tileUvOffset = index1DTo2DTexcoord(tileIndex, u_megatextureTileDimensions, u_megatextureTileSizeUv);\\n\\\n\\n\\\n    // Slice location\\n\\\n    float slice = voxelCoord.z - 0.5;\\n\\\n    int sliceIndex = int(floor(slice));\\n\\\n    int sliceIndex0 = intClamp(sliceIndex, 0, voxelDimensions.z - 1);\\n\\\n    vec2 sliceUvOffset0 = index1DTo2DTexcoord(sliceIndex0, u_megatextureSliceDimensions, u_megatextureSliceSizeUv);\\n\\\n\\n\\\n    // Voxel location\\n\\\n    vec2 voxelUvOffset = clamp(voxelCoord.xy, vec2(0.5), vec2(voxelDimensions.xy) - vec2(0.5)) * u_megatextureVoxelSizeUv;\\n\\\n\\n\\\n    // Final location in the megatexture\\n\\\n    vec2 uv0 = tileUvOffset + sliceUvOffset0 + voxelUvOffset;\\n\\\n\\n\\\n    #if defined(NEAREST_SAMPLING)\\n\\\n        return getPropertiesFromMegatextureAtUv(uv0);\\n\\\n    #else\\n\\\n        float sliceLerp = fract(slice);\\n\\\n        int sliceIndex1 = intMin(sliceIndex + 1, voxelDimensions.z - 1);\\n\\\n        vec2 sliceUvOffset1 = index1DTo2DTexcoord(sliceIndex1, u_megatextureSliceDimensions, u_megatextureSliceSizeUv);\\n\\\n        vec2 uv1 = tileUvOffset + sliceUvOffset1 + voxelUvOffset;\\n\\\n        Properties properties0 = getPropertiesFromMegatextureAtUv(uv0);\\n\\\n        Properties properties1 = getPropertiesFromMegatextureAtUv(uv1);\\n\\\n        return mixProperties(properties0, properties1, sliceLerp);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\n// Convert an array of sample datas to a final weighted properties.\\n\\\nProperties accumulatePropertiesFromMegatexture(in SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    #if (SAMPLE_COUNT == 1)\\n\\\n        return getPropertiesFromMegatexture(sampleDatas[0]);\\n\\\n    #else\\n\\\n        // When more than one sample is taken the accumulator needs to start at 0\\n\\\n        Properties properties = clearProperties();\\n\\\n        for (int i = 0; i < SAMPLE_COUNT; ++i) {\\n\\\n            float weight = sampleDatas[i].weight;\\n\\\n\\n\\\n            // Avoid reading the megatexture when the weight is 0 as it can be costly.\\n\\\n            if (weight > 0.0) {\\n\\\n                Properties tempProperties = getPropertiesFromMegatexture(sampleDatas[i]);\\n\\\n                tempProperties = scaleProperties(tempProperties, weight);\\n\\\n                properties = sumProperties(properties, tempProperties);\\n\\\n            }\\n\\\n        }\\n\\\n        return properties;\\n\\\n    #endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":0}},{"generated":{"line":144,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1}},{"generated":{"line":145,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1},"name":"exports"},{"generated":{"line":145,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1}},{"generated":{"line":145,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1},"name":"default"},{"generated":{"line":145,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1}},{"generated":{"line":145,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1},"name":"_default"},{"generated":{"line":145,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js","original":{"line":138,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Voxels/Megatexture.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"// See Octree.glsl for the definitions of SampleData and intMod\\n\\\n\\n\\\n/* Megatexture defines (set in Scene/VoxelRenderResources.js)\\n\\\n#define SAMPLE_COUNT ###\\n\\\n#define NEAREST_SAMPLING\\n\\\n#define PADDING\\n\\\n*/\\n\\\n\\n\\\nuniform ivec2 u_megatextureSliceDimensions; // number of slices per tile, in two dimensions\\n\\\nuniform ivec2 u_megatextureTileDimensions; // number of tiles per megatexture, in two dimensions\\n\\\nuniform vec2 u_megatextureVoxelSizeUv;\\n\\\nuniform vec2 u_megatextureSliceSizeUv;\\n\\\nuniform vec2 u_megatextureTileSizeUv;\\n\\\n\\n\\\nuniform ivec3 u_dimensions; // does not include padding\\n\\\n#if defined(PADDING)\\n\\\n    uniform ivec3 u_paddingBefore;\\n\\\n    uniform ivec3 u_paddingAfter;\\n\\\n#endif\\n\\\n\\n\\\n// Integer min, max, clamp: For WebGL1 only\\n\\\nint intMin(int a, int b) {\\n\\\n    return a <= b ? a : b;\\n\\\n}\\n\\\nint intMax(int a, int b) {\\n\\\n    return a >= b ? a : b;\\n\\\n}\\n\\\nint intClamp(int v, int minVal, int maxVal) {\\n\\\n    return intMin(intMax(v, minVal), maxVal);\\n\\\n}\\n\\\n\\n\\\nvec2 index1DTo2DTexcoord(int index, ivec2 dimensions, vec2 uvScale)\\n\\\n{\\n\\\n    int indexX = intMod(index, dimensions.x);\\n\\\n    int indexY = index / dimensions.x;\\n\\\n    return vec2(indexX, indexY) * uvScale;\\n\\\n}\\n\\\n\\n\\\n/*\\n\\\n    How is 3D data stored in a 2D megatexture?\\n\\\n\\n\\\n    In this example there is only one loaded tile and it has 2x2x2 voxels (8 voxels total).\\n\\\n    The data is sliced by Z. The data at Z = 0 is placed in texels (0,0), (0,1), (1,0), (1,1) and\\n\\\n    the data at Z = 1 is placed in texels (2,0), (2,1), (3,0), (3,1).\\n\\\n    Note that there could be empty space in the megatexture because it's a power of two.\\n\\\n\\n\\\n      0   1   2   3\\n\\\n    +---+---+---+---+\\n\\\n    |   |   |   |   | 3\\n\\\n    +---+---+---+---+\\n\\\n    |   |   |   |   | 2\\n\\\n    +-------+-------+\\n\\\n    |010|110|011|111| 1\\n\\\n    |--- ---|--- ---|\\n\\\n    |000|100|001|101| 0\\n\\\n    +-------+-------+\\n\\\n\\n\\\n    When doing linear interpolation the megatexture needs to be sampled twice: once for\\n\\\n    the Z slice above the voxel coordinate and once for the slice below. The two slices\\n\\\n    are interpolated with fract(coord.z - 0.5). For example, a Z coordinate of 1.0 is\\n\\\n    halfway between two Z slices so the interpolation factor is 0.5. Below is a side view\\n\\\n    of the 3D voxel grid with voxel coordinates on the left side.\\n\\\n\\n\\\n    2 +---+\\n\\\n      |001|\\n\\\n    1 +-z-+\\n\\\n      |000|\\n\\\n    0 +---+\\n\\\n\\n\\\n    When doing nearest neighbor the megatexture only needs to be sampled once at the closest Z slice.\\n\\\n*/\\n\\\n\\n\\\nProperties getPropertiesFromMegatexture(in SampleData sampleData) {\\n\\\n    vec3 tileUv = clamp(sampleData.tileUv, vec3(0.0), vec3(1.0)); // TODO is the clamp necessary?\\n\\\n    int tileIndex = sampleData.megatextureIndex;\\n\\\n    vec3 voxelCoord = tileUv * vec3(u_dimensions);\\n\\\n    ivec3 voxelDimensions = u_dimensions;\\n\\\n\\n\\\n    #if defined(PADDING)\\n\\\n        voxelDimensions += u_paddingBefore + u_paddingAfter;\\n\\\n        voxelCoord += vec3(u_paddingBefore);\\n\\\n    #endif\\n\\\n\\n\\\n    #if defined(NEAREST_SAMPLING)\\n\\\n        // Round to the center of the nearest voxel\\n\\\n        voxelCoord = floor(voxelCoord) + vec3(0.5);\\n\\\n    #endif\\n\\\n\\n\\\n    // Tile location\\n\\\n    vec2 tileUvOffset = index1DTo2DTexcoord(tileIndex, u_megatextureTileDimensions, u_megatextureTileSizeUv);\\n\\\n\\n\\\n    // Slice location\\n\\\n    float slice = voxelCoord.z - 0.5;\\n\\\n    int sliceIndex = int(floor(slice));\\n\\\n    int sliceIndex0 = intClamp(sliceIndex, 0, voxelDimensions.z - 1);\\n\\\n    vec2 sliceUvOffset0 = index1DTo2DTexcoord(sliceIndex0, u_megatextureSliceDimensions, u_megatextureSliceSizeUv);\\n\\\n\\n\\\n    // Voxel location\\n\\\n    vec2 voxelUvOffset = clamp(voxelCoord.xy, vec2(0.5), vec2(voxelDimensions.xy) - vec2(0.5)) * u_megatextureVoxelSizeUv;\\n\\\n\\n\\\n    // Final location in the megatexture\\n\\\n    vec2 uv0 = tileUvOffset + sliceUvOffset0 + voxelUvOffset;\\n\\\n\\n\\\n    #if defined(NEAREST_SAMPLING)\\n\\\n        return getPropertiesFromMegatextureAtUv(uv0);\\n\\\n    #else\\n\\\n        float sliceLerp = fract(slice);\\n\\\n        int sliceIndex1 = intMin(sliceIndex + 1, voxelDimensions.z - 1);\\n\\\n        vec2 sliceUvOffset1 = index1DTo2DTexcoord(sliceIndex1, u_megatextureSliceDimensions, u_megatextureSliceSizeUv);\\n\\\n        vec2 uv1 = tileUvOffset + sliceUvOffset1 + voxelUvOffset;\\n\\\n        Properties properties0 = getPropertiesFromMegatextureAtUv(uv0);\\n\\\n        Properties properties1 = getPropertiesFromMegatextureAtUv(uv1);\\n\\\n        return mixProperties(properties0, properties1, sliceLerp);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\n// Convert an array of sample datas to a final weighted properties.\\n\\\nProperties accumulatePropertiesFromMegatexture(in SampleData sampleDatas[SAMPLE_COUNT]) {\\n\\\n    #if (SAMPLE_COUNT == 1)\\n\\\n        return getPropertiesFromMegatexture(sampleDatas[0]);\\n\\\n    #else\\n\\\n        // When more than one sample is taken the accumulator needs to start at 0\\n\\\n        Properties properties = clearProperties();\\n\\\n        for (int i = 0; i < SAMPLE_COUNT; ++i) {\\n\\\n            float weight = sampleDatas[i].weight;\\n\\\n\\n\\\n            // Avoid reading the megatexture when the weight is 0 as it can be costly.\\n\\\n            if (weight > 0.0) {\\n\\\n                Properties tempProperties = getPropertiesFromMegatexture(sampleDatas[i]);\\n\\\n                tempProperties = scaleProperties(tempProperties, weight);\\n\\\n                properties = sumProperties(properties, tempProperties);\\n\\\n            }\\n\\\n        }\\n\\\n        return properties;\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"1fc03ca3966bc2bdbf815cefa57431c3","cacheData":{"env":{}}}