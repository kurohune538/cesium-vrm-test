{"id":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"uniform sampler2D colorTexture;\\n\\\nuniform sampler2D dirtTexture;\\n\\\nuniform sampler2D starTexture;\\n\\\nuniform vec2 dirtTextureDimensions;\\n\\\nuniform float distortion;\\n\\\nuniform float ghostDispersal;\\n\\\nuniform float haloWidth;\\n\\\nuniform float dirtAmount;\\n\\\nuniform float earthRadius;\\n\\\nuniform float intensity;\\n\\\n\\n\\\nin vec2 v_textureCoordinates;\\n\\\n\\n\\\n// whether it is in space or not\\n\\\n// 6500000.0 is empirical value\\n\\\n#define DISTANCE_TO_SPACE 6500000.0\\n\\\n\\n\\\n// return ndc from world coordinate biased earthRadius\\n\\\nvec4 getNDCFromWC(vec3 WC, float earthRadius)\\n\\\n{\\n\\\n    vec4 positionEC = czm_view * vec4(WC, 1.0);\\n\\\n    positionEC = vec4(positionEC.x + earthRadius, positionEC.y, positionEC.z, 1.0);\\n\\\n    vec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\\n\\\n    return czm_viewportOrthographic * vec4(positionWC.xy, -positionWC.z, 1.0);\\n\\\n}\\n\\\n\\n\\\n// Check if current pixel is included Earth\\n\\\n// if then mask it gradually\\n\\\nfloat isInEarth(vec2 texcoord, vec2 sceneSize)\\n\\\n{\\n\\\n    vec2 NDC = texcoord * 2.0 - 1.0;\\n\\\n    vec4 earthPosSC = getNDCFromWC(vec3(0.0), 0.0);\\n\\\n    vec4 earthPosSCEdge = getNDCFromWC(vec3(0.0), earthRadius * 1.5);\\n\\\n    NDC.xy -= earthPosSC.xy;\\n\\\n\\n\\\n    float X = abs(NDC.x) * sceneSize.x;\\n\\\n    float Y = abs(NDC.y) * sceneSize.y;\\n\\\n\\n\\\n    return clamp(0.0, 1.0, max(sqrt(X * X + Y * Y) / max(abs(earthPosSCEdge.x * sceneSize.x), 1.0) - 0.8 , 0.0));\\n\\\n}\\n\\\n\\n\\\n// For Chromatic effect\\n\\\nvec4 textureDistorted(sampler2D tex, vec2 texcoord, vec2 direction, vec3 distortion, bool isSpace)\\n\\\n{\\n\\\n    vec2 sceneSize = czm_viewport.zw;\\n\\\n    vec3 color;\\n\\\n    if(isSpace)\\n\\\n    {\\n\\\n        color.r = isInEarth(texcoord + direction * distortion.r, sceneSize) * texture(tex, texcoord + direction * distortion.r).r;\\n\\\n        color.g = isInEarth(texcoord + direction * distortion.g, sceneSize) * texture(tex, texcoord + direction * distortion.g).g;\\n\\\n        color.b = isInEarth(texcoord + direction * distortion.b, sceneSize) * texture(tex, texcoord + direction * distortion.b).b;\\n\\\n    }\\n\\\n    else\\n\\\n    {\\n\\\n        color.r = texture(tex, texcoord + direction * distortion.r).r;\\n\\\n        color.g = texture(tex, texcoord + direction * distortion.g).g;\\n\\\n        color.b = texture(tex, texcoord + direction * distortion.b).b;\\n\\\n    }\\n\\\n    return vec4(clamp(color, 0.0, 1.0), 0.0);\\n\\\n}\\n\\\n\\n\\\nvoid main(void)\\n\\\n{\\n\\\n    vec4 originalColor = texture(colorTexture, v_textureCoordinates);\\n\\\n    vec3 rgb = originalColor.rgb;\\n\\\n    bool isSpace = length(czm_viewerPositionWC.xyz) > DISTANCE_TO_SPACE;\\n\\\n\\n\\\n    // Sun position\\n\\\n    vec4 sunPos = czm_morphTime == 1.0 ? vec4(czm_sunPositionWC, 1.0) : vec4(czm_sunPositionColumbusView.zxy, 1.0);\\n\\\n    vec4 sunPositionEC = czm_view * sunPos;\\n\\\n    vec4 sunPositionWC = czm_eyeToWindowCoordinates(sunPositionEC);\\n\\\n    sunPos = czm_viewportOrthographic * vec4(sunPositionWC.xy, -sunPositionWC.z, 1.0);\\n\\\n\\n\\\n    // If sun is not in the screen space, use original color.\\n\\\n    if(!isSpace || !((sunPos.x >= -1.1 && sunPos.x <= 1.1) && (sunPos.y >= -1.1 && sunPos.y <= 1.1)))\\n\\\n    {\\n\\\n        // Lens flare is disabled when not in space until #5932 is fixed.\\n\\\n        //    https://github.com/CesiumGS/cesium/issues/5932\\n\\\n        out_FragColor = originalColor;\\n\\\n        return;\\n\\\n    }\\n\\\n\\n\\\n    vec2 texcoord = vec2(1.0) - v_textureCoordinates;\\n\\\n    vec2 pixelSize = czm_pixelRatio / czm_viewport.zw;\\n\\\n    vec2 invPixelSize = 1.0 / pixelSize;\\n\\\n    vec3 distortionVec = pixelSize.x * vec3(-distortion, 0.0, distortion);\\n\\\n\\n\\\n    // ghost vector to image centre:\\n\\\n    vec2 ghostVec = (vec2(0.5) - texcoord) * ghostDispersal;\\n\\\n    vec3 direction = normalize(vec3(ghostVec, 0.0));\\n\\\n\\n\\\n    // sample ghosts:\\n\\\n    vec4 result = vec4(0.0);\\n\\\n    vec4 ghost = vec4(0.0);\\n\\\n    for (int i = 0; i < 4; ++i)\\n\\\n    {\\n\\\n        vec2 offset = fract(texcoord + ghostVec * float(i));\\n\\\n        // Only bright spots from the centre of the source image\\n\\\n        ghost += textureDistorted(colorTexture, offset, direction.xy, distortionVec, isSpace);\\n\\\n    }\\n\\\n    result += ghost;\\n\\\n\\n\\\n    // sample halo\\n\\\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\\n\\\n    float weightForHalo = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\\n\\\n    weightForHalo = pow(1.0 - weightForHalo, 5.0);\\n\\\n\\n\\\n    result += textureDistorted(colorTexture, texcoord + haloVec, direction.xy, distortionVec, isSpace) * weightForHalo * 1.5;\\n\\\n\\n\\\n    // dirt on lens\\n\\\n    vec2 dirtTexCoords = (v_textureCoordinates * invPixelSize) / dirtTextureDimensions;\\n\\\n    if (dirtTexCoords.x > 1.0)\\n\\\n    {\\n\\\n        dirtTexCoords.x = mod(floor(dirtTexCoords.x), 2.0) == 1.0 ? 1.0 - fract(dirtTexCoords.x) :  fract(dirtTexCoords.x);\\n\\\n    }\\n\\\n    if (dirtTexCoords.y > 1.0)\\n\\\n    {\\n\\\n        dirtTexCoords.y = mod(floor(dirtTexCoords.y), 2.0) == 1.0 ? 1.0 - fract(dirtTexCoords.y) :  fract(dirtTexCoords.y);\\n\\\n    }\\n\\\n    result += dirtAmount * texture(dirtTexture, dirtTexCoords);\\n\\\n\\n\\\n    // Rotating starburst texture's coordinate\\n\\\n    // dot(czm_view[0].xyz, vec3(0.0, 0.0, 1.0)) + dot(czm_view[1].xyz, vec3(0.0, 1.0, 0.0))\\n\\\n    float camrot = czm_view[0].z + czm_view[1].y;\\n\\\n    float cosValue = cos(camrot);\\n\\\n    float sinValue = sin(camrot);\\n\\\n    mat3 rotation = mat3(\\n\\\n        cosValue, -sinValue, 0.0,\\n\\\n        sinValue, cosValue, 0.0,\\n\\\n        0.0, 0.0, 1.0\\n\\\n    );\\n\\\n\\n\\\n    vec3 st1 = vec3(v_textureCoordinates * 2.0 - vec2(1.0), 1.0);\\n\\\n    vec3 st2 = vec3((rotation * st1).xy, 1.0);\\n\\\n    vec3 st3 = st2 * 0.5 + vec3(0.5);\\n\\\n    vec2 lensStarTexcoord = st3.xy;\\n\\\n    float weightForLensFlare = length(vec3(sunPos.xy, 0.0));\\n\\\n    float oneMinusWeightForLensFlare = max(1.0 - weightForLensFlare, 0.0);\\n\\\n\\n\\\n    if (!isSpace)\\n\\\n    {\\n\\\n        result *= oneMinusWeightForLensFlare * intensity * 0.2;\\n\\\n    }\\n\\\n    else\\n\\\n    {\\n\\\n        result *= oneMinusWeightForLensFlare * intensity;\\n\\\n        result *= texture(starTexture, lensStarTexcoord) * pow(weightForLensFlare, 1.0) * max((1.0 - length(vec3(st1.xy, 0.0))), 0.0) * 2.0;\\n\\\n    }\\n\\\n\\n\\\n    result += texture(colorTexture, v_textureCoordinates);\\n\\\n\\n\\\n    out_FragColor = result;\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":0}},{"generated":{"line":161,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1}},{"generated":{"line":162,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1},"name":"exports"},{"generated":{"line":162,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1}},{"generated":{"line":162,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1},"name":"default"},{"generated":{"line":162,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1}},{"generated":{"line":162,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1},"name":"_default"},{"generated":{"line":162,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js","original":{"line":155,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/PostProcessStages/LensFlare.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"uniform sampler2D colorTexture;\\n\\\nuniform sampler2D dirtTexture;\\n\\\nuniform sampler2D starTexture;\\n\\\nuniform vec2 dirtTextureDimensions;\\n\\\nuniform float distortion;\\n\\\nuniform float ghostDispersal;\\n\\\nuniform float haloWidth;\\n\\\nuniform float dirtAmount;\\n\\\nuniform float earthRadius;\\n\\\nuniform float intensity;\\n\\\n\\n\\\nin vec2 v_textureCoordinates;\\n\\\n\\n\\\n// whether it is in space or not\\n\\\n// 6500000.0 is empirical value\\n\\\n#define DISTANCE_TO_SPACE 6500000.0\\n\\\n\\n\\\n// return ndc from world coordinate biased earthRadius\\n\\\nvec4 getNDCFromWC(vec3 WC, float earthRadius)\\n\\\n{\\n\\\n    vec4 positionEC = czm_view * vec4(WC, 1.0);\\n\\\n    positionEC = vec4(positionEC.x + earthRadius, positionEC.y, positionEC.z, 1.0);\\n\\\n    vec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\\n\\\n    return czm_viewportOrthographic * vec4(positionWC.xy, -positionWC.z, 1.0);\\n\\\n}\\n\\\n\\n\\\n// Check if current pixel is included Earth\\n\\\n// if then mask it gradually\\n\\\nfloat isInEarth(vec2 texcoord, vec2 sceneSize)\\n\\\n{\\n\\\n    vec2 NDC = texcoord * 2.0 - 1.0;\\n\\\n    vec4 earthPosSC = getNDCFromWC(vec3(0.0), 0.0);\\n\\\n    vec4 earthPosSCEdge = getNDCFromWC(vec3(0.0), earthRadius * 1.5);\\n\\\n    NDC.xy -= earthPosSC.xy;\\n\\\n\\n\\\n    float X = abs(NDC.x) * sceneSize.x;\\n\\\n    float Y = abs(NDC.y) * sceneSize.y;\\n\\\n\\n\\\n    return clamp(0.0, 1.0, max(sqrt(X * X + Y * Y) / max(abs(earthPosSCEdge.x * sceneSize.x), 1.0) - 0.8 , 0.0));\\n\\\n}\\n\\\n\\n\\\n// For Chromatic effect\\n\\\nvec4 textureDistorted(sampler2D tex, vec2 texcoord, vec2 direction, vec3 distortion, bool isSpace)\\n\\\n{\\n\\\n    vec2 sceneSize = czm_viewport.zw;\\n\\\n    vec3 color;\\n\\\n    if(isSpace)\\n\\\n    {\\n\\\n        color.r = isInEarth(texcoord + direction * distortion.r, sceneSize) * texture(tex, texcoord + direction * distortion.r).r;\\n\\\n        color.g = isInEarth(texcoord + direction * distortion.g, sceneSize) * texture(tex, texcoord + direction * distortion.g).g;\\n\\\n        color.b = isInEarth(texcoord + direction * distortion.b, sceneSize) * texture(tex, texcoord + direction * distortion.b).b;\\n\\\n    }\\n\\\n    else\\n\\\n    {\\n\\\n        color.r = texture(tex, texcoord + direction * distortion.r).r;\\n\\\n        color.g = texture(tex, texcoord + direction * distortion.g).g;\\n\\\n        color.b = texture(tex, texcoord + direction * distortion.b).b;\\n\\\n    }\\n\\\n    return vec4(clamp(color, 0.0, 1.0), 0.0);\\n\\\n}\\n\\\n\\n\\\nvoid main(void)\\n\\\n{\\n\\\n    vec4 originalColor = texture(colorTexture, v_textureCoordinates);\\n\\\n    vec3 rgb = originalColor.rgb;\\n\\\n    bool isSpace = length(czm_viewerPositionWC.xyz) > DISTANCE_TO_SPACE;\\n\\\n\\n\\\n    // Sun position\\n\\\n    vec4 sunPos = czm_morphTime == 1.0 ? vec4(czm_sunPositionWC, 1.0) : vec4(czm_sunPositionColumbusView.zxy, 1.0);\\n\\\n    vec4 sunPositionEC = czm_view * sunPos;\\n\\\n    vec4 sunPositionWC = czm_eyeToWindowCoordinates(sunPositionEC);\\n\\\n    sunPos = czm_viewportOrthographic * vec4(sunPositionWC.xy, -sunPositionWC.z, 1.0);\\n\\\n\\n\\\n    // If sun is not in the screen space, use original color.\\n\\\n    if(!isSpace || !((sunPos.x >= -1.1 && sunPos.x <= 1.1) && (sunPos.y >= -1.1 && sunPos.y <= 1.1)))\\n\\\n    {\\n\\\n        // Lens flare is disabled when not in space until #5932 is fixed.\\n\\\n        //    https://github.com/CesiumGS/cesium/issues/5932\\n\\\n        out_FragColor = originalColor;\\n\\\n        return;\\n\\\n    }\\n\\\n\\n\\\n    vec2 texcoord = vec2(1.0) - v_textureCoordinates;\\n\\\n    vec2 pixelSize = czm_pixelRatio / czm_viewport.zw;\\n\\\n    vec2 invPixelSize = 1.0 / pixelSize;\\n\\\n    vec3 distortionVec = pixelSize.x * vec3(-distortion, 0.0, distortion);\\n\\\n\\n\\\n    // ghost vector to image centre:\\n\\\n    vec2 ghostVec = (vec2(0.5) - texcoord) * ghostDispersal;\\n\\\n    vec3 direction = normalize(vec3(ghostVec, 0.0));\\n\\\n\\n\\\n    // sample ghosts:\\n\\\n    vec4 result = vec4(0.0);\\n\\\n    vec4 ghost = vec4(0.0);\\n\\\n    for (int i = 0; i < 4; ++i)\\n\\\n    {\\n\\\n        vec2 offset = fract(texcoord + ghostVec * float(i));\\n\\\n        // Only bright spots from the centre of the source image\\n\\\n        ghost += textureDistorted(colorTexture, offset, direction.xy, distortionVec, isSpace);\\n\\\n    }\\n\\\n    result += ghost;\\n\\\n\\n\\\n    // sample halo\\n\\\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\\n\\\n    float weightForHalo = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\\n\\\n    weightForHalo = pow(1.0 - weightForHalo, 5.0);\\n\\\n\\n\\\n    result += textureDistorted(colorTexture, texcoord + haloVec, direction.xy, distortionVec, isSpace) * weightForHalo * 1.5;\\n\\\n\\n\\\n    // dirt on lens\\n\\\n    vec2 dirtTexCoords = (v_textureCoordinates * invPixelSize) / dirtTextureDimensions;\\n\\\n    if (dirtTexCoords.x > 1.0)\\n\\\n    {\\n\\\n        dirtTexCoords.x = mod(floor(dirtTexCoords.x), 2.0) == 1.0 ? 1.0 - fract(dirtTexCoords.x) :  fract(dirtTexCoords.x);\\n\\\n    }\\n\\\n    if (dirtTexCoords.y > 1.0)\\n\\\n    {\\n\\\n        dirtTexCoords.y = mod(floor(dirtTexCoords.y), 2.0) == 1.0 ? 1.0 - fract(dirtTexCoords.y) :  fract(dirtTexCoords.y);\\n\\\n    }\\n\\\n    result += dirtAmount * texture(dirtTexture, dirtTexCoords);\\n\\\n\\n\\\n    // Rotating starburst texture's coordinate\\n\\\n    // dot(czm_view[0].xyz, vec3(0.0, 0.0, 1.0)) + dot(czm_view[1].xyz, vec3(0.0, 1.0, 0.0))\\n\\\n    float camrot = czm_view[0].z + czm_view[1].y;\\n\\\n    float cosValue = cos(camrot);\\n\\\n    float sinValue = sin(camrot);\\n\\\n    mat3 rotation = mat3(\\n\\\n        cosValue, -sinValue, 0.0,\\n\\\n        sinValue, cosValue, 0.0,\\n\\\n        0.0, 0.0, 1.0\\n\\\n    );\\n\\\n\\n\\\n    vec3 st1 = vec3(v_textureCoordinates * 2.0 - vec2(1.0), 1.0);\\n\\\n    vec3 st2 = vec3((rotation * st1).xy, 1.0);\\n\\\n    vec3 st3 = st2 * 0.5 + vec3(0.5);\\n\\\n    vec2 lensStarTexcoord = st3.xy;\\n\\\n    float weightForLensFlare = length(vec3(sunPos.xy, 0.0));\\n\\\n    float oneMinusWeightForLensFlare = max(1.0 - weightForLensFlare, 0.0);\\n\\\n\\n\\\n    if (!isSpace)\\n\\\n    {\\n\\\n        result *= oneMinusWeightForLensFlare * intensity * 0.2;\\n\\\n    }\\n\\\n    else\\n\\\n    {\\n\\\n        result *= oneMinusWeightForLensFlare * intensity;\\n\\\n        result *= texture(starTexture, lensStarTexcoord) * pow(weightForLensFlare, 1.0) * max((1.0 - length(vec3(st1.xy, 0.0))), 0.0) * 2.0;\\n\\\n    }\\n\\\n\\n\\\n    result += texture(colorTexture, v_textureCoordinates);\\n\\\n\\n\\\n    out_FragColor = result;\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"8515c5674a79c7a63dd7c1b845d36c42","cacheData":{"env":{}}}