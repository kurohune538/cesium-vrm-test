{"id":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"// See IntersectionUtils.glsl for the definitions of Ray, Intersections, INF_HIT,\\n\\\n// NO_HIT, setIntersectionPair\\n\\\n\\n\\\n/* Clipping plane defines (set in Scene/VoxelRenderResources.js)\\n\\\n#define CLIPPING_PLANES_UNION\\n\\\n#define CLIPPING_PLANES_COUNT\\n\\\n#define CLIPPING_PLANES_INTERSECTION_INDEX\\n\\\n*/\\n\\\n\\n\\\nuniform sampler2D u_clippingPlanesTexture;\\n\\\nuniform mat4 u_clippingPlanesMatrix;\\n\\\n\\n\\\n// Plane is in Hessian Normal Form\\n\\\nvec4 intersectPlane(in Ray ray, in vec4 plane) {\\n\\\n    vec3 n = plane.xyz; // normal\\n\\\n    float w = plane.w; // -dot(pointOnPlane, normal)\\n\\\n\\n\\\n    float a = dot(ray.pos, n);\\n\\\n    float b = dot(ray.dir, n);\\n\\\n    float t = -(w + a) / b;\\n\\\n\\n\\\n    return vec4(n, t);\\n\\\n}\\n\\\n\\n\\\nvoid intersectClippingPlanes(in Ray ray, inout Intersections ix) {\\n\\\n    vec4 backSide = vec4(-ray.dir, -INF_HIT);\\n\\\n    vec4 farSide = vec4(ray.dir, +INF_HIT);\\n\\\n    RayShapeIntersection clippingVolume;\\n\\\n\\n\\\n    #if (CLIPPING_PLANES_COUNT == 1)\\n\\\n        // Union and intersection are the same when there's one clipping plane, and the code\\n\\\n        // is more simplified.\\n\\\n        vec4 planeUv = getClippingPlane(u_clippingPlanesTexture, 0, u_clippingPlanesMatrix);\\n\\\n        vec4 intersection = intersectPlane(ray, planeUv);\\n\\\n        bool reflects = dot(ray.dir, intersection.xyz) < 0.0;\\n\\\n        clippingVolume.entry = reflects ? backSide : intersection;\\n\\\n        clippingVolume.exit = reflects ? intersection : farSide;\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX, clippingVolume);\\n\\\n    #elif defined(CLIPPING_PLANES_UNION)\\n\\\n        vec4 firstTransmission = vec4(ray.dir, +INF_HIT);\\n\\\n        vec4 lastReflection = vec4(-ray.dir, -INF_HIT);\\n\\\n        for (int i = 0; i < CLIPPING_PLANES_COUNT; i++) {\\n\\\n            vec4 planeUv = getClippingPlane(u_clippingPlanesTexture, i, u_clippingPlanesMatrix);\\n\\\n            vec4 intersection = intersectPlane(ray, planeUv);\\n\\\n            if (dot(ray.dir, planeUv.xyz) > 0.0) {\\n\\\n                firstTransmission = intersection.w <= firstTransmission.w ? intersection : firstTransmission;\\n\\\n            } else {\\n\\\n                lastReflection = intersection.w >= lastReflection.w ? intersection : lastReflection;\\n\\\n            }\\n\\\n        }\\n\\\n        clippingVolume.entry = backSide;\\n\\\n        clippingVolume.exit = lastReflection;\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX + 0, clippingVolume);\\n\\\n        clippingVolume.entry = firstTransmission;\\n\\\n        clippingVolume.exit = farSide;\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX + 1, clippingVolume);\\n\\\n    #else // intersection\\n\\\n        vec4 lastTransmission = vec4(ray.dir, -INF_HIT);\\n\\\n        vec4 firstReflection = vec4(-ray.dir, +INF_HIT);\\n\\\n        for (int i = 0; i < CLIPPING_PLANES_COUNT; i++) {\\n\\\n            vec4 planeUv = getClippingPlane(u_clippingPlanesTexture, i, u_clippingPlanesMatrix);\\n\\\n            vec4 intersection = intersectPlane(ray, planeUv);\\n\\\n            if (dot(ray.dir, planeUv.xyz) > 0.0) {\\n\\\n                lastTransmission = intersection.w > lastTransmission.w ? intersection : lastTransmission;\\n\\\n            } else {\\n\\\n                firstReflection = intersection.w < firstReflection.w ? intersection: firstReflection;\\n\\\n            }\\n\\\n        }\\n\\\n        if (lastTransmission.w < firstReflection.w) {\\n\\\n            clippingVolume.entry = lastTransmission;\\n\\\n            clippingVolume.exit = firstReflection;\\n\\\n        } else {\\n\\\n            clippingVolume.entry = vec4(-ray.dir, NO_HIT);\\n\\\n            clippingVolume.exit = vec4(ray.dir, NO_HIT);\\n\\\n        }\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX, clippingVolume);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":0}},{"generated":{"line":86,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1},"name":"exports"},{"generated":{"line":87,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1}},{"generated":{"line":87,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1},"name":"default"},{"generated":{"line":87,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1}},{"generated":{"line":87,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1},"name":"_default"},{"generated":{"line":87,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js","original":{"line":80,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectClippingPlanes.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"// See IntersectionUtils.glsl for the definitions of Ray, Intersections, INF_HIT,\\n\\\n// NO_HIT, setIntersectionPair\\n\\\n\\n\\\n/* Clipping plane defines (set in Scene/VoxelRenderResources.js)\\n\\\n#define CLIPPING_PLANES_UNION\\n\\\n#define CLIPPING_PLANES_COUNT\\n\\\n#define CLIPPING_PLANES_INTERSECTION_INDEX\\n\\\n*/\\n\\\n\\n\\\nuniform sampler2D u_clippingPlanesTexture;\\n\\\nuniform mat4 u_clippingPlanesMatrix;\\n\\\n\\n\\\n// Plane is in Hessian Normal Form\\n\\\nvec4 intersectPlane(in Ray ray, in vec4 plane) {\\n\\\n    vec3 n = plane.xyz; // normal\\n\\\n    float w = plane.w; // -dot(pointOnPlane, normal)\\n\\\n\\n\\\n    float a = dot(ray.pos, n);\\n\\\n    float b = dot(ray.dir, n);\\n\\\n    float t = -(w + a) / b;\\n\\\n\\n\\\n    return vec4(n, t);\\n\\\n}\\n\\\n\\n\\\nvoid intersectClippingPlanes(in Ray ray, inout Intersections ix) {\\n\\\n    vec4 backSide = vec4(-ray.dir, -INF_HIT);\\n\\\n    vec4 farSide = vec4(ray.dir, +INF_HIT);\\n\\\n    RayShapeIntersection clippingVolume;\\n\\\n\\n\\\n    #if (CLIPPING_PLANES_COUNT == 1)\\n\\\n        // Union and intersection are the same when there's one clipping plane, and the code\\n\\\n        // is more simplified.\\n\\\n        vec4 planeUv = getClippingPlane(u_clippingPlanesTexture, 0, u_clippingPlanesMatrix);\\n\\\n        vec4 intersection = intersectPlane(ray, planeUv);\\n\\\n        bool reflects = dot(ray.dir, intersection.xyz) < 0.0;\\n\\\n        clippingVolume.entry = reflects ? backSide : intersection;\\n\\\n        clippingVolume.exit = reflects ? intersection : farSide;\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX, clippingVolume);\\n\\\n    #elif defined(CLIPPING_PLANES_UNION)\\n\\\n        vec4 firstTransmission = vec4(ray.dir, +INF_HIT);\\n\\\n        vec4 lastReflection = vec4(-ray.dir, -INF_HIT);\\n\\\n        for (int i = 0; i < CLIPPING_PLANES_COUNT; i++) {\\n\\\n            vec4 planeUv = getClippingPlane(u_clippingPlanesTexture, i, u_clippingPlanesMatrix);\\n\\\n            vec4 intersection = intersectPlane(ray, planeUv);\\n\\\n            if (dot(ray.dir, planeUv.xyz) > 0.0) {\\n\\\n                firstTransmission = intersection.w <= firstTransmission.w ? intersection : firstTransmission;\\n\\\n            } else {\\n\\\n                lastReflection = intersection.w >= lastReflection.w ? intersection : lastReflection;\\n\\\n            }\\n\\\n        }\\n\\\n        clippingVolume.entry = backSide;\\n\\\n        clippingVolume.exit = lastReflection;\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX + 0, clippingVolume);\\n\\\n        clippingVolume.entry = firstTransmission;\\n\\\n        clippingVolume.exit = farSide;\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX + 1, clippingVolume);\\n\\\n    #else // intersection\\n\\\n        vec4 lastTransmission = vec4(ray.dir, -INF_HIT);\\n\\\n        vec4 firstReflection = vec4(-ray.dir, +INF_HIT);\\n\\\n        for (int i = 0; i < CLIPPING_PLANES_COUNT; i++) {\\n\\\n            vec4 planeUv = getClippingPlane(u_clippingPlanesTexture, i, u_clippingPlanesMatrix);\\n\\\n            vec4 intersection = intersectPlane(ray, planeUv);\\n\\\n            if (dot(ray.dir, planeUv.xyz) > 0.0) {\\n\\\n                lastTransmission = intersection.w > lastTransmission.w ? intersection : lastTransmission;\\n\\\n            } else {\\n\\\n                firstReflection = intersection.w < firstReflection.w ? intersection: firstReflection;\\n\\\n            }\\n\\\n        }\\n\\\n        if (lastTransmission.w < firstReflection.w) {\\n\\\n            clippingVolume.entry = lastTransmission;\\n\\\n            clippingVolume.exit = firstReflection;\\n\\\n        } else {\\n\\\n            clippingVolume.entry = vec4(-ray.dir, NO_HIT);\\n\\\n            clippingVolume.exit = vec4(ray.dir, NO_HIT);\\n\\\n        }\\n\\\n        setShapeIntersection(ix, CLIPPING_PLANES_INTERSECTION_INDEX, clippingVolume);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"e809ee1da75e5adbde4b16dd463802e0","cacheData":{"env":{}}}