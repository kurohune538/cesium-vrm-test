{"id":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"/**\\n\\\n * Compares <code>left</code> and <code>right</code> componentwise. Returns <code>true</code>\\n\\\n * if they are within <code>epsilon</code> and <code>false</code> otherwise. The inputs\\n\\\n * <code>left</code> and <code>right</code> can be <code>float</code>s, <code>vec2</code>s,\\n\\\n * <code>vec3</code>s, or <code>vec4</code>s.\\n\\\n *\\n\\\n * @name czm_equalsEpsilon\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {} left The first vector.\\n\\\n * @param {} right The second vector.\\n\\\n * @param {float} epsilon The epsilon to use for equality testing.\\n\\\n * @returns {bool} <code>true</code> if the components are within <code>epsilon</code> and <code>false</code> otherwise.\\n\\\n *\\n\\\n * @example\\n\\\n * // GLSL declarations\\n\\\n * bool czm_equalsEpsilon(float left, float right, float epsilon);\\n\\\n * bool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon);\\n\\\n * bool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon);\\n\\\n * bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon);\\n\\\n */\\n\\\nbool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon) {\\n\\\n    return all(lessThanEqual(abs(left - right), vec4(epsilon)));\\n\\\n}\\n\\\n\\n\\\nbool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon) {\\n\\\n    return all(lessThanEqual(abs(left - right), vec3(epsilon)));\\n\\\n}\\n\\\n\\n\\\nbool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon) {\\n\\\n    return all(lessThanEqual(abs(left - right), vec2(epsilon)));\\n\\\n}\\n\\\n\\n\\\nbool czm_equalsEpsilon(float left, float right, float epsilon) {\\n\\\n    return (abs(left - right) <= epsilon);\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":0}},{"generated":{"line":44,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1},"name":"exports"},{"generated":{"line":45,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1}},{"generated":{"line":45,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1},"name":"default"},{"generated":{"line":45,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1}},{"generated":{"line":45,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1},"name":"_default"},{"generated":{"line":45,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js","original":{"line":38,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Builtin/Functions/equalsEpsilon.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * Compares <code>left</code> and <code>right</code> componentwise. Returns <code>true</code>\\n\\\n * if they are within <code>epsilon</code> and <code>false</code> otherwise. The inputs\\n\\\n * <code>left</code> and <code>right</code> can be <code>float</code>s, <code>vec2</code>s,\\n\\\n * <code>vec3</code>s, or <code>vec4</code>s.\\n\\\n *\\n\\\n * @name czm_equalsEpsilon\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {} left The first vector.\\n\\\n * @param {} right The second vector.\\n\\\n * @param {float} epsilon The epsilon to use for equality testing.\\n\\\n * @returns {bool} <code>true</code> if the components are within <code>epsilon</code> and <code>false</code> otherwise.\\n\\\n *\\n\\\n * @example\\n\\\n * // GLSL declarations\\n\\\n * bool czm_equalsEpsilon(float left, float right, float epsilon);\\n\\\n * bool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon);\\n\\\n * bool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon);\\n\\\n * bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon);\\n\\\n */\\n\\\nbool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon) {\\n\\\n    return all(lessThanEqual(abs(left - right), vec4(epsilon)));\\n\\\n}\\n\\\n\\n\\\nbool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon) {\\n\\\n    return all(lessThanEqual(abs(left - right), vec3(epsilon)));\\n\\\n}\\n\\\n\\n\\\nbool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon) {\\n\\\n    return all(lessThanEqual(abs(left - right), vec2(epsilon)));\\n\\\n}\\n\\\n\\n\\\nbool czm_equalsEpsilon(float left, float right, float epsilon) {\\n\\\n    return (abs(left - right) <= epsilon);\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"aa23a4cb8d4d6e1f8aa5d81053dd197b","cacheData":{"env":{}}}