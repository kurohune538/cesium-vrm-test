{"id":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","dependencies":[{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/package.json","includedInParent":true,"mtime":1679775809033},{"name":"/Users/shinnosukekomiya/Documents/me/cesium-three-test/node_modules/@cesium/engine/package.json","includedInParent":true,"mtime":1679775775888}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"// See IntersectionUtils.glsl for the definitions of Ray, Intersections,\\n\\\n// setIntersection, setIntersectionPair, INF_HIT, NO_HIT\\n\\\n\\n\\\n/* Ellipsoid defines (set in Scene/VoxelEllipsoidShape.js)\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_ZERO\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_UNDER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_OVER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_EQUAL_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_OVER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_EQUAL_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_OVER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MAX\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MIN\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_FLAT\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_LONGITUDE\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MAX\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MIN\\n\\\n*/\\n\\\n\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE)\\n\\\n    uniform vec2 u_ellipsoidRenderLongitudeMinMax;\\n\\\n#endif\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_OVER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_OVER_HALF)\\n\\\n    uniform vec2 u_ellipsoidRenderLatitudeCosSqrHalfMinMax;\\n\\\n#endif\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MAX)\\n\\\n    uniform float u_ellipsoidInverseOuterScaleUv;\\n\\\n#endif\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MIN)\\n\\\n    uniform float u_ellipsoidInverseInnerScaleUv;\\n\\\n#endif\\n\\\n\\n\\\nvec2 intersectZPlane(Ray ray)\\n\\\n{\\n\\\n    float o = ray.pos.z;\\n\\\n    float d = ray.dir.z;\\n\\\n    float t = -o / d;\\n\\\n    float s = sign(o);\\n\\\n\\n\\\n    if (t >= 0.0 != s >= 0.0) return vec2(t, +INF_HIT);\\n\\\n    else return vec2(-INF_HIT, t);\\n\\\n}\\n\\\n\\n\\\nvec4 intersectHalfPlane(Ray ray, float angle) {\\n\\\n    vec2 o = ray.pos.xy;\\n\\\n    vec2 d = ray.dir.xy;\\n\\\n    vec2 planeDirection = vec2(cos(angle), sin(angle));\\n\\\n    vec2 planeNormal = vec2(planeDirection.y, -planeDirection.x);\\n\\\n\\n\\\n    float a = dot(o, planeNormal);\\n\\\n    float b = dot(d, planeNormal);\\n\\\n    float t = -a / b;\\n\\\n\\n\\\n    vec2 p = o + t * d;\\n\\\n    bool outside = dot(p, planeDirection) < 0.0;\\n\\\n    if (outside) return vec4(-INF_HIT, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n\\n\\\n    return vec4(-INF_HIT, t, t, +INF_HIT);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectHalfSpace(Ray ray, float angle)\\n\\\n{\\n\\\n    vec2 o = ray.pos.xy;\\n\\\n    vec2 d = ray.dir.xy;\\n\\\n    vec2 n = vec2(sin(angle), -cos(angle));\\n\\\n\\n\\\n    float a = dot(o, n);\\n\\\n    float b = dot(d, n);\\n\\\n    float t = -a / b;\\n\\\n    float s = sign(a);\\n\\\n\\n\\\n    if (t >= 0.0 != s >= 0.0) return vec2(t, +INF_HIT);\\n\\\n    else return vec2(-INF_HIT, t);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectRegularWedge(Ray ray, float minAngle, float maxAngle)\\n\\\n{\\n\\\n    vec2 o = ray.pos.xy;\\n\\\n    vec2 d = ray.dir.xy;\\n\\\n    vec2 n1 = vec2(sin(minAngle), -cos(minAngle));\\n\\\n    vec2 n2 = vec2(-sin(maxAngle), cos(maxAngle));\\n\\\n\\n\\\n    float a1 = dot(o, n1);\\n\\\n    float a2 = dot(o, n2);\\n\\\n    float b1 = dot(d, n1);\\n\\\n    float b2 = dot(d, n2);\\n\\\n\\n\\\n    float t1 = -a1 / b1;\\n\\\n    float t2 = -a2 / b2;\\n\\\n    float s1 = sign(a1);\\n\\\n    float s2 = sign(a2);\\n\\\n\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n    float smin = tmin == t1 ? s1 : s2;\\n\\\n    float smax = tmin == t1 ? s2 : s1;\\n\\\n\\n\\\n    bool e = tmin >= 0.0;\\n\\\n    bool f = tmax >= 0.0;\\n\\\n    bool g = smin >= 0.0;\\n\\\n    bool h = smax >= 0.0;\\n\\\n\\n\\\n    if (e != g && f == h) return vec2(tmin, tmax);\\n\\\n    else if (e == g && f == h) return vec2(-INF_HIT, tmin);\\n\\\n    else if (e != g && f != h) return vec2(tmax, +INF_HIT);\\n\\\n    else return vec2(NO_HIT);\\n\\\n}\\n\\\n\\n\\\nvec4 intersectFlippedWedge(Ray ray, float minAngle, float maxAngle)\\n\\\n{\\n\\\n    vec2 planeIntersectMin = intersectHalfSpace(ray, minAngle);\\n\\\n    vec2 planeIntersectMax = intersectHalfSpace(ray, maxAngle + czm_pi);\\n\\\n    return vec4(planeIntersectMin, planeIntersectMax);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectUnitSphere(Ray ray)\\n\\\n{\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n\\n\\\n    float b = dot(d, o);\\n\\\n    float c = dot(o, o) - 1.0;\\n\\\n    float det = b * b - c;\\n\\\n\\n\\\n    if (det < 0.0) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    det = sqrt(det);\\n\\\n    float t1 = -b - det;\\n\\\n    float t2 = -b + det;\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n\\n\\\n    return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectUnitSphereUnnormalizedDirection(Ray ray)\\n\\\n{\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n\\n\\\n    float a = dot(d, d);\\n\\\n    float b = dot(d, o);\\n\\\n    float c = dot(o, o) - 1.0;\\n\\\n    float det = b * b - a * c;\\n\\\n\\n\\\n    if (det < 0.0) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    det = sqrt(det);\\n\\\n    float t1 = (-b - det) / a;\\n\\\n    float t2 = (-b + det) / a;\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n\\n\\\n    return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectDoubleEndedCone(Ray ray, float cosSqrHalfAngle)\\n\\\n{\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n    float a = d.z * d.z - dot(d, d) * cosSqrHalfAngle;\\n\\\n    float b = d.z * o.z - dot(o, d) * cosSqrHalfAngle;\\n\\\n    float c = o.z * o.z - dot(o, o) * cosSqrHalfAngle;\\n\\\n    float det = b * b - a * c;\\n\\\n\\n\\\n    if (det < 0.0) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    det = sqrt(det);\\n\\\n    float t1 = (-b - det) / a;\\n\\\n    float t2 = (-b + det) / a;\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n    return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvec4 intersectFlippedCone(Ray ray, float cosSqrHalfAngle) {\\n\\\n    vec2 intersect = intersectDoubleEndedCone(ray, cosSqrHalfAngle);\\n\\\n\\n\\\n    if (intersect.x == NO_HIT) {\\n\\\n        return vec4(-INF_HIT, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n    float tmin = intersect.x;\\n\\\n    float tmax = intersect.y;\\n\\\n    float zmin = o.z + tmin * d.z;\\n\\\n    float zmax = o.z + tmax * d.z;\\n\\\n\\n\\\n    // One interval\\n\\\n    if (zmin < 0.0 && zmax < 0.0) return vec4(-INF_HIT, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n    else if (zmin < 0.0) return vec4(-INF_HIT, tmax, NO_HIT, NO_HIT);\\n\\\n    else if (zmax < 0.0) return vec4(tmin, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n    // Two intervals\\n\\\n    else return vec4(-INF_HIT, tmin, tmax, +INF_HIT);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectRegularCone(Ray ray, float cosSqrHalfAngle) {\\n\\\n    vec2 intersect = intersectDoubleEndedCone(ray, cosSqrHalfAngle);\\n\\\n\\n\\\n    if (intersect.x == NO_HIT) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n    float tmin = intersect.x;\\n\\\n    float tmax = intersect.y;\\n\\\n    float zmin = o.z + tmin * d.z;\\n\\\n    float zmax = o.z + tmax * d.z;\\n\\\n\\n\\\n    if (zmin < 0.0 && zmax < 0.0) return vec2(NO_HIT);\\n\\\n    else if (zmin < 0.0) return vec2(tmax, +INF_HIT);\\n\\\n    else if (zmax < 0.0) return vec2(-INF_HIT, tmin);\\n\\\n    else return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvoid intersectShape(in Ray ray, inout Intersections ix) {\\n\\\n    // Position is converted from [0,1] to [-1,+1] because shape intersections assume unit space is [-1,+1].\\n\\\n    // Direction is scaled as well to be in sync with position.\\n\\\n    ray.pos = ray.pos * 2.0 - 1.0;\\n\\\n    ray.dir *= 2.0;\\n\\\n\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MAX)\\n\\\n        Ray outerRay = Ray(ray.pos * u_ellipsoidInverseOuterScaleUv, ray.dir * u_ellipsoidInverseOuterScaleUv);\\n\\\n    #else\\n\\\n        Ray outerRay = ray;\\n\\\n    #endif\\n\\\n\\n\\\n    // Outer ellipsoid\\n\\\n    vec2 outerIntersect = intersectUnitSphereUnnormalizedDirection(outerRay);\\n\\\n    setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MAX, outerIntersect);\\n\\\n\\n\\\n    // Exit early if the outer ellipsoid was missed.\\n\\\n    if (outerIntersect.x == NO_HIT) {\\n\\\n        return;\\n\\\n    }\\n\\\n\\n\\\n    // Inner ellipsoid\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_FLAT)\\n\\\n        // When the ellipsoid is perfectly thin it's necessary to sandwich the\\n\\\n        // inner ellipsoid intersection inside the outer ellipsoid intersection.\\n\\\n\\n\\\n        // Without this special case,\\n\\\n        // [outerMin, outerMax, innerMin, innerMax] will bubble sort to\\n\\\n        // [outerMin, innerMin, outerMax, innerMax] which will cause the back\\n\\\n        // side of the ellipsoid to be invisible because it will think the ray\\n\\\n        // is still inside the inner (negative) ellipsoid after exiting the\\n\\\n        // outer (positive) ellipsoid.\\n\\\n\\n\\\n        // With this special case,\\n\\\n        // [outerMin, innerMin, innerMax, outerMax] will bubble sort to\\n\\\n        // [outerMin, innerMin, innerMax, outerMax] which will work correctly.\\n\\\n\\n\\\n        // Note: If initializeIntersections() changes its sorting function\\n\\\n        // from bubble sort to something else, this code may need to change.\\n\\\n        setIntersection(ix, 0, outerIntersect.x, true, true);   // positive, enter\\n\\\n        setIntersection(ix, 1, outerIntersect.x, false, true);  // negative, enter\\n\\\n        setIntersection(ix, 2, outerIntersect.y, false, false); // negative, exit\\n\\\n        setIntersection(ix, 3, outerIntersect.y, true, false);  // positive, exit\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MIN)\\n\\\n        Ray innerRay = Ray(ray.pos * u_ellipsoidInverseInnerScaleUv, ray.dir * u_ellipsoidInverseInnerScaleUv);\\n\\\n        vec2 innerIntersect = intersectUnitSphereUnnormalizedDirection(innerRay);\\n\\\n\\n\\\n        if (innerIntersect == vec2(NO_HIT)) {\\n\\\n            setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MIN, innerIntersect);\\n\\\n        } else {\\n\\\n            // When the ellipsoid is very large and thin it's possible for floating\\n\\\n            // point math to cause the ray to intersect the inner ellipsoid before\\n\\\n            // the outer ellipsoid. To prevent this from happening, clamp innerIntersect\\n\\\n            // to outerIntersect and sandwhich the intersections like described above.\\n\\\n            //\\n\\\n            // In theory a similar fix is needed for cylinders, however it's more\\n\\\n            // complicated to implement because the inner shape is allowed to be\\n\\\n            // intersected first.\\n\\\n            innerIntersect.x = max(innerIntersect.x, outerIntersect.x);\\n\\\n            innerIntersect.y = min(innerIntersect.y, outerIntersect.y);\\n\\\n            setIntersection(ix, 0, outerIntersect.x, true, true);   // positive, enter\\n\\\n            setIntersection(ix, 1, innerIntersect.x, false, true);  // negative, enter\\n\\\n            setIntersection(ix, 2, innerIntersect.y, false, false); // negative, exit\\n\\\n            setIntersection(ix, 3, outerIntersect.y, true, false);  // positive, exit\\n\\\n        }\\n\\\n    #endif\\n\\\n\\n\\\n    // Flip the ray because the intersection function expects a cone growing towards +Z.\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_EQUAL_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF)\\n\\\n        Ray flippedRay = outerRay;\\n\\\n        flippedRay.dir.z *= -1.0;\\n\\\n        flippedRay.pos.z *= -1.0;\\n\\\n    #endif\\n\\\n\\n\\\n    // Bottom cone\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF)\\n\\\n        vec2 bottomConeIntersection = intersectRegularCone(flippedRay, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN, bottomConeIntersection);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_EQUAL_HALF)\\n\\\n        vec2 bottomConeIntersection = intersectZPlane(flippedRay);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN, bottomConeIntersection);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_OVER_HALF)\\n\\\n        vec4 bottomConeIntersection = intersectFlippedCone(ray, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN + 0, bottomConeIntersection.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN + 1, bottomConeIntersection.zw);\\n\\\n    #endif\\n\\\n\\n\\\n    // Top cone\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF)\\n\\\n        vec4 topConeIntersection = intersectFlippedCone(flippedRay, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX + 0, topConeIntersection.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX + 1, topConeIntersection.zw);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_EQUAL_HALF)\\n\\\n        vec2 topConeIntersection = intersectZPlane(ray);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX, topConeIntersection);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_OVER_HALF)\\n\\\n        vec2 topConeIntersection = intersectRegularCone(ray, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX, topConeIntersection);\\n\\\n    #endif\\n\\\n\\n\\\n    // Wedge\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_ZERO)\\n\\\n        vec4 wedgeIntersect = intersectHalfPlane(ray, u_ellipsoidRenderLongitudeMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 0, wedgeIntersect.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 1, wedgeIntersect.zw);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_UNDER_HALF)\\n\\\n        vec2 wedgeIntersect = intersectRegularWedge(ray, u_ellipsoidRenderLongitudeMinMax.x, u_ellipsoidRenderLongitudeMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE, wedgeIntersect);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_HALF)\\n\\\n        vec2 wedgeIntersect = intersectHalfSpace(ray, u_ellipsoidRenderLongitudeMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE, wedgeIntersect);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_OVER_HALF)\\n\\\n        vec4 wedgeIntersect = intersectFlippedWedge(ray, u_ellipsoidRenderLongitudeMinMax.x, u_ellipsoidRenderLongitudeMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 0, wedgeIntersect.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 1, wedgeIntersect.zw);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":1,"column":0},"name":"_default"},{"generated":{"line":8,"column":12},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":166,"column":0}},{"generated":{"line":173,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":167,"column":0}},{"generated":{"line":174,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":168,"column":0}},{"generated":{"line":175,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":169,"column":0}},{"generated":{"line":176,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":170,"column":0}},{"generated":{"line":177,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":171,"column":0}},{"generated":{"line":178,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":172,"column":0}},{"generated":{"line":179,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":173,"column":0}},{"generated":{"line":180,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":174,"column":0}},{"generated":{"line":181,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":175,"column":0}},{"generated":{"line":182,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":176,"column":0}},{"generated":{"line":183,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":177,"column":0}},{"generated":{"line":184,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":178,"column":0}},{"generated":{"line":185,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":179,"column":0}},{"generated":{"line":186,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":180,"column":0}},{"generated":{"line":187,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":181,"column":0}},{"generated":{"line":188,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":182,"column":0}},{"generated":{"line":189,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":183,"column":0}},{"generated":{"line":190,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":184,"column":0}},{"generated":{"line":191,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":185,"column":0}},{"generated":{"line":192,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":186,"column":0}},{"generated":{"line":193,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":187,"column":0}},{"generated":{"line":194,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":188,"column":0}},{"generated":{"line":195,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":189,"column":0}},{"generated":{"line":196,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":190,"column":0}},{"generated":{"line":197,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":191,"column":0}},{"generated":{"line":198,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":192,"column":0}},{"generated":{"line":199,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":193,"column":0}},{"generated":{"line":200,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":194,"column":0}},{"generated":{"line":201,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":195,"column":0}},{"generated":{"line":202,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":196,"column":0}},{"generated":{"line":203,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":197,"column":0}},{"generated":{"line":204,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":198,"column":0}},{"generated":{"line":205,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":199,"column":0}},{"generated":{"line":206,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":200,"column":0}},{"generated":{"line":207,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":201,"column":0}},{"generated":{"line":208,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":202,"column":0}},{"generated":{"line":209,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":203,"column":0}},{"generated":{"line":210,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":204,"column":0}},{"generated":{"line":211,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":205,"column":0}},{"generated":{"line":212,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":206,"column":0}},{"generated":{"line":213,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":207,"column":0}},{"generated":{"line":214,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":208,"column":0}},{"generated":{"line":215,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":209,"column":0}},{"generated":{"line":216,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":210,"column":0}},{"generated":{"line":217,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":211,"column":0}},{"generated":{"line":218,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":212,"column":0}},{"generated":{"line":219,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":213,"column":0}},{"generated":{"line":220,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":214,"column":0}},{"generated":{"line":221,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":215,"column":0}},{"generated":{"line":222,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":216,"column":0}},{"generated":{"line":223,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":217,"column":0}},{"generated":{"line":224,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":218,"column":0}},{"generated":{"line":225,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":219,"column":0}},{"generated":{"line":226,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":220,"column":0}},{"generated":{"line":227,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":221,"column":0}},{"generated":{"line":228,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":222,"column":0}},{"generated":{"line":229,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":223,"column":0}},{"generated":{"line":230,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":224,"column":0}},{"generated":{"line":231,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":225,"column":0}},{"generated":{"line":232,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":226,"column":0}},{"generated":{"line":233,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":227,"column":0}},{"generated":{"line":234,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":228,"column":0}},{"generated":{"line":235,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":229,"column":0}},{"generated":{"line":236,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":230,"column":0}},{"generated":{"line":237,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":231,"column":0}},{"generated":{"line":238,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":232,"column":0}},{"generated":{"line":239,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":233,"column":0}},{"generated":{"line":240,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":234,"column":0}},{"generated":{"line":241,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":235,"column":0}},{"generated":{"line":242,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":236,"column":0}},{"generated":{"line":243,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":237,"column":0}},{"generated":{"line":244,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":238,"column":0}},{"generated":{"line":245,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":239,"column":0}},{"generated":{"line":246,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":240,"column":0}},{"generated":{"line":247,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":241,"column":0}},{"generated":{"line":248,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":242,"column":0}},{"generated":{"line":249,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":243,"column":0}},{"generated":{"line":250,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":244,"column":0}},{"generated":{"line":251,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":245,"column":0}},{"generated":{"line":252,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":246,"column":0}},{"generated":{"line":253,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":247,"column":0}},{"generated":{"line":254,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":248,"column":0}},{"generated":{"line":255,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":249,"column":0}},{"generated":{"line":256,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":250,"column":0}},{"generated":{"line":257,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":251,"column":0}},{"generated":{"line":258,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":252,"column":0}},{"generated":{"line":259,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":253,"column":0}},{"generated":{"line":260,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":254,"column":0}},{"generated":{"line":261,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":255,"column":0}},{"generated":{"line":262,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":256,"column":0}},{"generated":{"line":263,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":257,"column":0}},{"generated":{"line":264,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":258,"column":0}},{"generated":{"line":265,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":259,"column":0}},{"generated":{"line":266,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":260,"column":0}},{"generated":{"line":267,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":261,"column":0}},{"generated":{"line":268,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":262,"column":0}},{"generated":{"line":269,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":263,"column":0}},{"generated":{"line":270,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":264,"column":0}},{"generated":{"line":271,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":265,"column":0}},{"generated":{"line":272,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":266,"column":0}},{"generated":{"line":273,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":267,"column":0}},{"generated":{"line":274,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":268,"column":0}},{"generated":{"line":275,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":269,"column":0}},{"generated":{"line":276,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":270,"column":0}},{"generated":{"line":277,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":271,"column":0}},{"generated":{"line":278,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":272,"column":0}},{"generated":{"line":279,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":273,"column":0}},{"generated":{"line":280,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":274,"column":0}},{"generated":{"line":281,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":275,"column":0}},{"generated":{"line":282,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":276,"column":0}},{"generated":{"line":283,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":277,"column":0}},{"generated":{"line":284,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":278,"column":0}},{"generated":{"line":285,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":279,"column":0}},{"generated":{"line":286,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":280,"column":0}},{"generated":{"line":287,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":281,"column":0}},{"generated":{"line":288,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":282,"column":0}},{"generated":{"line":289,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":283,"column":0}},{"generated":{"line":290,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":284,"column":0}},{"generated":{"line":291,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":285,"column":0}},{"generated":{"line":292,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":286,"column":0}},{"generated":{"line":293,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":287,"column":0}},{"generated":{"line":294,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":288,"column":0}},{"generated":{"line":295,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":289,"column":0}},{"generated":{"line":296,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":290,"column":0}},{"generated":{"line":297,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":291,"column":0}},{"generated":{"line":298,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":292,"column":0}},{"generated":{"line":299,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":293,"column":0}},{"generated":{"line":300,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":294,"column":0}},{"generated":{"line":301,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":295,"column":0}},{"generated":{"line":302,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":296,"column":0}},{"generated":{"line":303,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":297,"column":0}},{"generated":{"line":304,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":298,"column":0}},{"generated":{"line":305,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":299,"column":0}},{"generated":{"line":306,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":300,"column":0}},{"generated":{"line":307,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":301,"column":0}},{"generated":{"line":308,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":302,"column":0}},{"generated":{"line":309,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":303,"column":0}},{"generated":{"line":310,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":304,"column":0}},{"generated":{"line":311,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":305,"column":0}},{"generated":{"line":312,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":306,"column":0}},{"generated":{"line":313,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":307,"column":0}},{"generated":{"line":314,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":308,"column":0}},{"generated":{"line":315,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":309,"column":0}},{"generated":{"line":316,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":310,"column":0}},{"generated":{"line":317,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":311,"column":0}},{"generated":{"line":318,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":312,"column":0}},{"generated":{"line":319,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":313,"column":0}},{"generated":{"line":320,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":314,"column":0}},{"generated":{"line":321,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":315,"column":0}},{"generated":{"line":322,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":316,"column":0}},{"generated":{"line":323,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":317,"column":0}},{"generated":{"line":324,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":318,"column":0}},{"generated":{"line":325,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":319,"column":0}},{"generated":{"line":326,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":320,"column":0}},{"generated":{"line":327,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":321,"column":0}},{"generated":{"line":328,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":322,"column":0}},{"generated":{"line":329,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":323,"column":0}},{"generated":{"line":330,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":324,"column":0}},{"generated":{"line":331,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":325,"column":0}},{"generated":{"line":332,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":326,"column":0}},{"generated":{"line":333,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":327,"column":0}},{"generated":{"line":334,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":328,"column":0}},{"generated":{"line":335,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":329,"column":0}},{"generated":{"line":336,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":330,"column":0}},{"generated":{"line":337,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":331,"column":0}},{"generated":{"line":338,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":332,"column":0}},{"generated":{"line":339,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":333,"column":0}},{"generated":{"line":340,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":334,"column":0}},{"generated":{"line":341,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":335,"column":0}},{"generated":{"line":342,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":336,"column":0}},{"generated":{"line":343,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":337,"column":0}},{"generated":{"line":344,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":338,"column":0}},{"generated":{"line":345,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":339,"column":0}},{"generated":{"line":346,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":340,"column":0}},{"generated":{"line":347,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":341,"column":0}},{"generated":{"line":348,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":342,"column":0}},{"generated":{"line":349,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":343,"column":0}},{"generated":{"line":350,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":344,"column":0}},{"generated":{"line":351,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":345,"column":0}},{"generated":{"line":352,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":346,"column":0}},{"generated":{"line":353,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":347,"column":0}},{"generated":{"line":354,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":348,"column":0}},{"generated":{"line":355,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":0}},{"generated":{"line":355,"column":1},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1}},{"generated":{"line":356,"column":0},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1},"name":"exports"},{"generated":{"line":356,"column":7},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1}},{"generated":{"line":356,"column":8},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1},"name":"default"},{"generated":{"line":356,"column":15},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1}},{"generated":{"line":356,"column":18},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1},"name":"_default"},{"generated":{"line":356,"column":26},"source":"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js","original":{"line":349,"column":1}}],"sources":{"node_modules/@cesium/engine/Source/Shaders/Voxels/IntersectEllipsoid.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"// See IntersectionUtils.glsl for the definitions of Ray, Intersections,\\n\\\n// setIntersection, setIntersectionPair, INF_HIT, NO_HIT\\n\\\n\\n\\\n/* Ellipsoid defines (set in Scene/VoxelEllipsoidShape.js)\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_ZERO\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_UNDER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_OVER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_EQUAL_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_OVER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_EQUAL_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_OVER_HALF\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MAX\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MIN\\n\\\n#define ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_FLAT\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_LONGITUDE\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MAX\\n\\\n#define ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MIN\\n\\\n*/\\n\\\n\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE)\\n\\\n    uniform vec2 u_ellipsoidRenderLongitudeMinMax;\\n\\\n#endif\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_OVER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_OVER_HALF)\\n\\\n    uniform vec2 u_ellipsoidRenderLatitudeCosSqrHalfMinMax;\\n\\\n#endif\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MAX)\\n\\\n    uniform float u_ellipsoidInverseOuterScaleUv;\\n\\\n#endif\\n\\\n#if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MIN)\\n\\\n    uniform float u_ellipsoidInverseInnerScaleUv;\\n\\\n#endif\\n\\\n\\n\\\nvec2 intersectZPlane(Ray ray)\\n\\\n{\\n\\\n    float o = ray.pos.z;\\n\\\n    float d = ray.dir.z;\\n\\\n    float t = -o / d;\\n\\\n    float s = sign(o);\\n\\\n\\n\\\n    if (t >= 0.0 != s >= 0.0) return vec2(t, +INF_HIT);\\n\\\n    else return vec2(-INF_HIT, t);\\n\\\n}\\n\\\n\\n\\\nvec4 intersectHalfPlane(Ray ray, float angle) {\\n\\\n    vec2 o = ray.pos.xy;\\n\\\n    vec2 d = ray.dir.xy;\\n\\\n    vec2 planeDirection = vec2(cos(angle), sin(angle));\\n\\\n    vec2 planeNormal = vec2(planeDirection.y, -planeDirection.x);\\n\\\n\\n\\\n    float a = dot(o, planeNormal);\\n\\\n    float b = dot(d, planeNormal);\\n\\\n    float t = -a / b;\\n\\\n\\n\\\n    vec2 p = o + t * d;\\n\\\n    bool outside = dot(p, planeDirection) < 0.0;\\n\\\n    if (outside) return vec4(-INF_HIT, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n\\n\\\n    return vec4(-INF_HIT, t, t, +INF_HIT);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectHalfSpace(Ray ray, float angle)\\n\\\n{\\n\\\n    vec2 o = ray.pos.xy;\\n\\\n    vec2 d = ray.dir.xy;\\n\\\n    vec2 n = vec2(sin(angle), -cos(angle));\\n\\\n\\n\\\n    float a = dot(o, n);\\n\\\n    float b = dot(d, n);\\n\\\n    float t = -a / b;\\n\\\n    float s = sign(a);\\n\\\n\\n\\\n    if (t >= 0.0 != s >= 0.0) return vec2(t, +INF_HIT);\\n\\\n    else return vec2(-INF_HIT, t);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectRegularWedge(Ray ray, float minAngle, float maxAngle)\\n\\\n{\\n\\\n    vec2 o = ray.pos.xy;\\n\\\n    vec2 d = ray.dir.xy;\\n\\\n    vec2 n1 = vec2(sin(minAngle), -cos(minAngle));\\n\\\n    vec2 n2 = vec2(-sin(maxAngle), cos(maxAngle));\\n\\\n\\n\\\n    float a1 = dot(o, n1);\\n\\\n    float a2 = dot(o, n2);\\n\\\n    float b1 = dot(d, n1);\\n\\\n    float b2 = dot(d, n2);\\n\\\n\\n\\\n    float t1 = -a1 / b1;\\n\\\n    float t2 = -a2 / b2;\\n\\\n    float s1 = sign(a1);\\n\\\n    float s2 = sign(a2);\\n\\\n\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n    float smin = tmin == t1 ? s1 : s2;\\n\\\n    float smax = tmin == t1 ? s2 : s1;\\n\\\n\\n\\\n    bool e = tmin >= 0.0;\\n\\\n    bool f = tmax >= 0.0;\\n\\\n    bool g = smin >= 0.0;\\n\\\n    bool h = smax >= 0.0;\\n\\\n\\n\\\n    if (e != g && f == h) return vec2(tmin, tmax);\\n\\\n    else if (e == g && f == h) return vec2(-INF_HIT, tmin);\\n\\\n    else if (e != g && f != h) return vec2(tmax, +INF_HIT);\\n\\\n    else return vec2(NO_HIT);\\n\\\n}\\n\\\n\\n\\\nvec4 intersectFlippedWedge(Ray ray, float minAngle, float maxAngle)\\n\\\n{\\n\\\n    vec2 planeIntersectMin = intersectHalfSpace(ray, minAngle);\\n\\\n    vec2 planeIntersectMax = intersectHalfSpace(ray, maxAngle + czm_pi);\\n\\\n    return vec4(planeIntersectMin, planeIntersectMax);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectUnitSphere(Ray ray)\\n\\\n{\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n\\n\\\n    float b = dot(d, o);\\n\\\n    float c = dot(o, o) - 1.0;\\n\\\n    float det = b * b - c;\\n\\\n\\n\\\n    if (det < 0.0) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    det = sqrt(det);\\n\\\n    float t1 = -b - det;\\n\\\n    float t2 = -b + det;\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n\\n\\\n    return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectUnitSphereUnnormalizedDirection(Ray ray)\\n\\\n{\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n\\n\\\n    float a = dot(d, d);\\n\\\n    float b = dot(d, o);\\n\\\n    float c = dot(o, o) - 1.0;\\n\\\n    float det = b * b - a * c;\\n\\\n\\n\\\n    if (det < 0.0) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    det = sqrt(det);\\n\\\n    float t1 = (-b - det) / a;\\n\\\n    float t2 = (-b + det) / a;\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n\\n\\\n    return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectDoubleEndedCone(Ray ray, float cosSqrHalfAngle)\\n\\\n{\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n    float a = d.z * d.z - dot(d, d) * cosSqrHalfAngle;\\n\\\n    float b = d.z * o.z - dot(o, d) * cosSqrHalfAngle;\\n\\\n    float c = o.z * o.z - dot(o, o) * cosSqrHalfAngle;\\n\\\n    float det = b * b - a * c;\\n\\\n\\n\\\n    if (det < 0.0) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    det = sqrt(det);\\n\\\n    float t1 = (-b - det) / a;\\n\\\n    float t2 = (-b + det) / a;\\n\\\n    float tmin = min(t1, t2);\\n\\\n    float tmax = max(t1, t2);\\n\\\n    return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvec4 intersectFlippedCone(Ray ray, float cosSqrHalfAngle) {\\n\\\n    vec2 intersect = intersectDoubleEndedCone(ray, cosSqrHalfAngle);\\n\\\n\\n\\\n    if (intersect.x == NO_HIT) {\\n\\\n        return vec4(-INF_HIT, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n    float tmin = intersect.x;\\n\\\n    float tmax = intersect.y;\\n\\\n    float zmin = o.z + tmin * d.z;\\n\\\n    float zmax = o.z + tmax * d.z;\\n\\\n\\n\\\n    // One interval\\n\\\n    if (zmin < 0.0 && zmax < 0.0) return vec4(-INF_HIT, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n    else if (zmin < 0.0) return vec4(-INF_HIT, tmax, NO_HIT, NO_HIT);\\n\\\n    else if (zmax < 0.0) return vec4(tmin, +INF_HIT, NO_HIT, NO_HIT);\\n\\\n    // Two intervals\\n\\\n    else return vec4(-INF_HIT, tmin, tmax, +INF_HIT);\\n\\\n}\\n\\\n\\n\\\nvec2 intersectRegularCone(Ray ray, float cosSqrHalfAngle) {\\n\\\n    vec2 intersect = intersectDoubleEndedCone(ray, cosSqrHalfAngle);\\n\\\n\\n\\\n    if (intersect.x == NO_HIT) {\\n\\\n        return vec2(NO_HIT);\\n\\\n    }\\n\\\n\\n\\\n    vec3 o = ray.pos;\\n\\\n    vec3 d = ray.dir;\\n\\\n    float tmin = intersect.x;\\n\\\n    float tmax = intersect.y;\\n\\\n    float zmin = o.z + tmin * d.z;\\n\\\n    float zmax = o.z + tmax * d.z;\\n\\\n\\n\\\n    if (zmin < 0.0 && zmax < 0.0) return vec2(NO_HIT);\\n\\\n    else if (zmin < 0.0) return vec2(tmax, +INF_HIT);\\n\\\n    else if (zmax < 0.0) return vec2(-INF_HIT, tmin);\\n\\\n    else return vec2(tmin, tmax);\\n\\\n}\\n\\\n\\n\\\nvoid intersectShape(in Ray ray, inout Intersections ix) {\\n\\\n    // Position is converted from [0,1] to [-1,+1] because shape intersections assume unit space is [-1,+1].\\n\\\n    // Direction is scaled as well to be in sync with position.\\n\\\n    ray.pos = ray.pos * 2.0 - 1.0;\\n\\\n    ray.dir *= 2.0;\\n\\\n\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MAX)\\n\\\n        Ray outerRay = Ray(ray.pos * u_ellipsoidInverseOuterScaleUv, ray.dir * u_ellipsoidInverseOuterScaleUv);\\n\\\n    #else\\n\\\n        Ray outerRay = ray;\\n\\\n    #endif\\n\\\n\\n\\\n    // Outer ellipsoid\\n\\\n    vec2 outerIntersect = intersectUnitSphereUnnormalizedDirection(outerRay);\\n\\\n    setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MAX, outerIntersect);\\n\\\n\\n\\\n    // Exit early if the outer ellipsoid was missed.\\n\\\n    if (outerIntersect.x == NO_HIT) {\\n\\\n        return;\\n\\\n    }\\n\\\n\\n\\\n    // Inner ellipsoid\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_FLAT)\\n\\\n        // When the ellipsoid is perfectly thin it's necessary to sandwich the\\n\\\n        // inner ellipsoid intersection inside the outer ellipsoid intersection.\\n\\\n\\n\\\n        // Without this special case,\\n\\\n        // [outerMin, outerMax, innerMin, innerMax] will bubble sort to\\n\\\n        // [outerMin, innerMin, outerMax, innerMax] which will cause the back\\n\\\n        // side of the ellipsoid to be invisible because it will think the ray\\n\\\n        // is still inside the inner (negative) ellipsoid after exiting the\\n\\\n        // outer (positive) ellipsoid.\\n\\\n\\n\\\n        // With this special case,\\n\\\n        // [outerMin, innerMin, innerMax, outerMax] will bubble sort to\\n\\\n        // [outerMin, innerMin, innerMax, outerMax] which will work correctly.\\n\\\n\\n\\\n        // Note: If initializeIntersections() changes its sorting function\\n\\\n        // from bubble sort to something else, this code may need to change.\\n\\\n        setIntersection(ix, 0, outerIntersect.x, true, true);   // positive, enter\\n\\\n        setIntersection(ix, 1, outerIntersect.x, false, true);  // negative, enter\\n\\\n        setIntersection(ix, 2, outerIntersect.y, false, false); // negative, exit\\n\\\n        setIntersection(ix, 3, outerIntersect.y, true, false);  // positive, exit\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_HEIGHT_MIN)\\n\\\n        Ray innerRay = Ray(ray.pos * u_ellipsoidInverseInnerScaleUv, ray.dir * u_ellipsoidInverseInnerScaleUv);\\n\\\n        vec2 innerIntersect = intersectUnitSphereUnnormalizedDirection(innerRay);\\n\\\n\\n\\\n        if (innerIntersect == vec2(NO_HIT)) {\\n\\\n            setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_HEIGHT_MIN, innerIntersect);\\n\\\n        } else {\\n\\\n            // When the ellipsoid is very large and thin it's possible for floating\\n\\\n            // point math to cause the ray to intersect the inner ellipsoid before\\n\\\n            // the outer ellipsoid. To prevent this from happening, clamp innerIntersect\\n\\\n            // to outerIntersect and sandwhich the intersections like described above.\\n\\\n            //\\n\\\n            // In theory a similar fix is needed for cylinders, however it's more\\n\\\n            // complicated to implement because the inner shape is allowed to be\\n\\\n            // intersected first.\\n\\\n            innerIntersect.x = max(innerIntersect.x, outerIntersect.x);\\n\\\n            innerIntersect.y = min(innerIntersect.y, outerIntersect.y);\\n\\\n            setIntersection(ix, 0, outerIntersect.x, true, true);   // positive, enter\\n\\\n            setIntersection(ix, 1, innerIntersect.x, false, true);  // negative, enter\\n\\\n            setIntersection(ix, 2, innerIntersect.y, false, false); // negative, exit\\n\\\n            setIntersection(ix, 3, outerIntersect.y, true, false);  // positive, exit\\n\\\n        }\\n\\\n    #endif\\n\\\n\\n\\\n    // Flip the ray because the intersection function expects a cone growing towards +Z.\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_EQUAL_HALF) || defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF)\\n\\\n        Ray flippedRay = outerRay;\\n\\\n        flippedRay.dir.z *= -1.0;\\n\\\n        flippedRay.pos.z *= -1.0;\\n\\\n    #endif\\n\\\n\\n\\\n    // Bottom cone\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_UNDER_HALF)\\n\\\n        vec2 bottomConeIntersection = intersectRegularCone(flippedRay, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN, bottomConeIntersection);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_EQUAL_HALF)\\n\\\n        vec2 bottomConeIntersection = intersectZPlane(flippedRay);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN, bottomConeIntersection);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MIN_OVER_HALF)\\n\\\n        vec4 bottomConeIntersection = intersectFlippedCone(ray, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN + 0, bottomConeIntersection.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MIN + 1, bottomConeIntersection.zw);\\n\\\n    #endif\\n\\\n\\n\\\n    // Top cone\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_UNDER_HALF)\\n\\\n        vec4 topConeIntersection = intersectFlippedCone(flippedRay, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX + 0, topConeIntersection.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX + 1, topConeIntersection.zw);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_EQUAL_HALF)\\n\\\n        vec2 topConeIntersection = intersectZPlane(ray);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX, topConeIntersection);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LATITUDE_MAX_OVER_HALF)\\n\\\n        vec2 topConeIntersection = intersectRegularCone(ray, u_ellipsoidRenderLatitudeCosSqrHalfMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LATITUDE_MAX, topConeIntersection);\\n\\\n    #endif\\n\\\n\\n\\\n    // Wedge\\n\\\n    #if defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_ZERO)\\n\\\n        vec4 wedgeIntersect = intersectHalfPlane(ray, u_ellipsoidRenderLongitudeMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 0, wedgeIntersect.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 1, wedgeIntersect.zw);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_UNDER_HALF)\\n\\\n        vec2 wedgeIntersect = intersectRegularWedge(ray, u_ellipsoidRenderLongitudeMinMax.x, u_ellipsoidRenderLongitudeMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE, wedgeIntersect);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_EQUAL_HALF)\\n\\\n        vec2 wedgeIntersect = intersectHalfSpace(ray, u_ellipsoidRenderLongitudeMinMax.x);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE, wedgeIntersect);\\n\\\n    #elif defined(ELLIPSOID_HAS_RENDER_BOUNDS_LONGITUDE_RANGE_OVER_HALF)\\n\\\n        vec4 wedgeIntersect = intersectFlippedWedge(ray, u_ellipsoidRenderLongitudeMinMax.x, u_ellipsoidRenderLongitudeMinMax.y);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 0, wedgeIntersect.xy);\\n\\\n        setIntersectionPair(ix, ELLIPSOID_INTERSECTION_INDEX_LONGITUDE + 1, wedgeIntersect.zw);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"3dba4dbe17b824aa725efbe70f1e7775","cacheData":{"env":{}}}